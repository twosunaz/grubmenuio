{
  "snippets": [
    {
      "title": "Alert Message Block",
      "description": "A customizable alert/message block with different styles",
      "language": "PHP",
      "code": "<?php\n/**\n * Alert Message Block with inline editor support\n */\nfunction register_alert_block() {\n    if (!function_exists('register_block_type')) return;\n    \n    // Register the block\n    register_block_type('custom/alert', [\n        'render_callback' => 'render_alert_block',\n        'attributes' => [\n            'content' => [\n                'type' => 'string',\n                'default' => ''\n            ],\n            'type' => [\n                'type' => 'string',\n                'default' => 'info'\n            ]\n        ]\n    ]);\n    \n    // Add inline script for editor\n    add_action('admin_footer', function() {\n        ?><script>\n        (function(blocks, element, blockEditor) {\n            var el = element.createElement;\n            var useBlockProps = blockEditor.useBlockProps;\n            var RichText = blockEditor.RichText;\n            \n            blocks.registerBlockType('custom/alert', {\n                title: 'Alert Message',\n                icon: 'info',\n                category: 'common',\n                attributes: {\n                    content: {\n                        type: 'string',\n                        default: ''\n                    },\n                    type: {\n                        type: 'string',\n                        default: 'info'\n                    }\n                },\n                \n                edit: function(props) {\n                    var blockProps = useBlockProps();\n                    var content = props.attributes.content;\n                    var type = props.attributes.type;\n                    \n                    return el('div', blockProps,\n                        el('div', { className: 'alert-controls' },\n                            el('select', {\n                                value: type,\n                                onChange: function(e) {\n                                    props.setAttributes({ type: e.target.value });\n                                }\n                            },\n                                el('option', { value: 'info' }, 'Info'),\n                                el('option', { value: 'success' }, 'Success'),\n                                el('option', { value: 'warning' }, 'Warning'),\n                                el('option', { value: 'error' }, 'Error')\n                            )\n                        ),\n                        el(RichText, {\n                            tagName: 'div',\n                            className: 'alert-content alert-' + type,\n                            value: content,\n                            onChange: function(newContent) {\n                                props.setAttributes({ content: newContent });\n                            },\n                            placeholder: 'Enter alert message...'\n                        })\n                    );\n                },\n                \n                save: function() {\n                    return null; // Use PHP render callback\n                }\n            });\n        }(window.wp.blocks, window.wp.element, window.wp.blockEditor));\n        </script>\n        <style>\n        .wp-block-custom-alert .alert-controls {\n            margin-bottom: 10px;\n        }\n        .wp-block-custom-alert .alert-content {\n            padding: 15px;\n            border-radius: 4px;\n            margin: 0;\n        }\n        .wp-block-custom-alert .alert-info {\n            background: #e3f2fd;\n            border: 1px solid #90caf9;\n        }\n        .wp-block-custom-alert .alert-success {\n            background: #e8f5e9;\n            border: 1px solid #a5d6a7;\n        }\n        .wp-block-custom-alert .alert-warning {\n            background: #fff3e0;\n            border: 1px solid #ffcc80;\n        }\n        .wp-block-custom-alert .alert-error {\n            background: #ffebee;\n            border: 1px solid #ef9a9a;\n        }\n        </style><?php\n    });\n}\nadd_action('init', 'register_alert_block');\n\nfunction render_alert_block($attributes) {\n    $content = $attributes['content'] ?? '';\n    $type = $attributes['type'] ?? 'info';\n    \n    $style = sprintf(\n        '<style>\n        .wp-block-custom-alert .alert-%s {\n            padding: 15px;\n            border-radius: 4px;\n            background: %s;\n            border: 1px solid %s;\n        }\n        </style>',\n        esc_attr($type),\n        esc_attr([\n            'info' => '#e3f2fd',\n            'success' => '#e8f5e9',\n            'warning' => '#fff3e0',\n            'error' => '#ffebee'\n        ][$type] ?? '#e3f2fd'),\n        esc_attr([\n            'info' => '#90caf9',\n            'success' => '#a5d6a7',\n            'warning' => '#ffcc80',\n            'error' => '#ef9a9a'\n        ][$type] ?? '#90caf9')\n    );\n    \n    return $style . sprintf(\n        '<div class=\"wp-block-custom-alert\"><div class=\"alert-content alert-%s\">%s</div></div>',\n        esc_attr($type),\n        wp_kses_post($content)\n    );\n}"
    },
    {
      "title": "Testimonial Block",
      "description": "A testimonial block with author, quote, and rating",
      "language": "PHP",
      "code": "<?php\n/**\n * Testimonial Block with inline editor support\n */\nfunction register_testimonial_block() {\n    if (!function_exists('register_block_type')) return;\n    \n    // Register the block\n    register_block_type('custom/testimonial', [\n        'render_callback' => 'render_testimonial_block',\n        'attributes' => [\n            'quote' => [\n                'type' => 'string',\n                'default' => ''\n            ],\n            'author' => [\n                'type' => 'string',\n                'default' => ''\n            ],\n            'rating' => [\n                'type' => 'number',\n                'default' => 5\n            ]\n        ]\n    ]);\n    \n    // Add inline script for editor\n    add_action('admin_footer', function() {\n        ?><script>\n        (function(blocks, element, blockEditor) {\n            var el = element.createElement;\n            var useBlockProps = blockEditor.useBlockProps;\n            var RichText = blockEditor.RichText;\n            \n            blocks.registerBlockType('custom/testimonial', {\n                title: 'Testimonial',\n                icon: 'format-quote',\n                category: 'common',\n                attributes: {\n                    quote: {\n                        type: 'string',\n                        default: ''\n                    },\n                    author: {\n                        type: 'string',\n                        default: ''\n                    },\n                    rating: {\n                        type: 'number',\n                        default: 5\n                    }\n                },\n                \n                edit: function(props) {\n                    var blockProps = useBlockProps();\n                    var attributes = props.attributes;\n                    \n                    return el('div', blockProps,\n                        el(RichText, {\n                            tagName: 'blockquote',\n                            className: 'testimonial-quote',\n                            value: attributes.quote,\n                            onChange: function(newQuote) {\n                                props.setAttributes({ quote: newQuote });\n                            },\n                            placeholder: 'Enter testimonial text...'\n                        }),\n                        el(RichText, {\n                            tagName: 'cite',\n                            className: 'testimonial-author',\n                            value: attributes.author,\n                            onChange: function(newAuthor) {\n                                props.setAttributes({ author: newAuthor });\n                            },\n                            placeholder: 'Enter author name...'\n                        }),\n                        el('div', { className: 'testimonial-rating' },\n                            el('select', {\n                                value: attributes.rating,\n                                onChange: function(e) {\n                                    props.setAttributes({ \n                                        rating: parseInt(e.target.value) \n                                    });\n                                }\n                            },\n                                [1,2,3,4,5].map(function(num) {\n                                    return el('option', { value: num },\n                                        num + ' ' + (num === 1 ? 'Star' : 'Stars')\n                                    );\n                                })\n                            )\n                        )\n                    );\n                },\n                \n                save: function() {\n                    return null; // Use PHP render callback\n                }\n            });\n        }(window.wp.blocks, window.wp.element, window.wp.blockEditor));\n        </script>\n        <style>\n        .wp-block-custom-testimonial {\n            padding: 20px;\n            background: #f8f9fa;\n            border-radius: 8px;\n            margin: 20px 0;\n        }\n        .wp-block-custom-testimonial .testimonial-quote {\n            font-size: 1.1em;\n            font-style: italic;\n            margin: 0 0 15px;\n            padding: 0;\n            border-left: 3px solid #007cba;\n            padding-left: 15px;\n        }\n        .wp-block-custom-testimonial .testimonial-author {\n            display: block;\n            font-weight: bold;\n            margin-bottom: 10px;\n        }\n        .wp-block-custom-testimonial .testimonial-rating {\n            color: #ffc107;\n        }\n        </style><?php\n    });\n}\nadd_action('init', 'register_testimonial_block');\n\nfunction render_testimonial_block($attributes) {\n    $quote = $attributes['quote'] ?? '';\n    $author = $attributes['author'] ?? '';\n    $rating = min(5, max(1, intval($attributes['rating'] ?? 5)));\n    \n    $stars = str_repeat('★', $rating) . str_repeat('☆', 5 - $rating);\n    \n    $style = '<style>\n        .wp-block-custom-testimonial {\n            padding: 20px;\n            background: #f8f9fa;\n            border-radius: 8px;\n            margin: 20px 0;\n        }\n        .testimonial-quote {\n            font-size: 1.1em;\n            font-style: italic;\n            margin: 0 0 15px;\n            padding: 0;\n            border-left: 3px solid #007cba;\n            padding-left: 15px;\n        }\n        .testimonial-author {\n            display: block;\n            font-weight: bold;\n            margin-bottom: 10px;\n        }\n        .testimonial-rating {\n            color: #ffc107;\n            font-size: 1.2em;\n        }\n    </style>';\n    \n    return $style . sprintf(\n        '<div class=\"wp-block-custom-testimonial\">\\n' .\n        '    <blockquote class=\"testimonial-quote\">%s</blockquote>\\n' .\n        '    <cite class=\"testimonial-author\">%s</cite>\\n' .\n        '    <div class=\"testimonial-rating\">%s</div>\\n' .\n        '</div>',\n        wp_kses_post($quote),\n        esc_html($author),\n        esc_html($stars)\n    );\n}"
    }
  ]
}
