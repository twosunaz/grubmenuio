{"version":3,"file":"lmnFetch-DeRrp9BG.js","sources":["../../src/assets/js/functions/lmnFetch.js"],"sourcesContent":["import { getCurrentInstance } from \"vue\";\nimport { notify } from \"@/assets/js/functions/notify.js\";\nimport { useAppStore } from \"@/store/app/app.js\";\n\nlet showErrrors = true;\n\n/**\n * Wrapper for fetch\n *\n * Handles errors and automatic fetch types\n *\n * @param {string} endpoint\n * @param {string} type - POST | GET | DELETE\n * @param {object} data\n * @param {boolean} whether the data is formData\n * @param {object} Whether to use a specific site to query instead of current\n *\n */\nexport const lmnFetch = async ({ endpoint = \"\", type = \"GET\", data = {}, params = {}, signal = null, isFormData = false, logging = false, hideErrors = false }) => {\n  const appStore = useAppStore();\n\n  // Only get it once\n  const restNonce = appStore.state.restNonce;\n  const restBase = appStore.state.restBase;\n\n  showErrrors = hideErrors === false ? true : false;\n\n  const payload = { method: type, headers: {} };\n\n  // Handle payload based on whether it's FormData or regular JSON\n  if (type !== \"GET\") {\n    if (isFormData) {\n      // For file uploads, don't set Content-Type - browser will set it with boundary\n      payload.body = data;\n      payload.headers = {\n        \"X-WP-Nonce\": restNonce,\n      };\n    } else {\n      payload.body = JSON.stringify(data);\n      payload.headers = {\n        \"Content-Type\": \"application/json\",\n        \"X-WP-Nonce\": restNonce,\n      };\n    }\n  } else {\n    payload.headers = { \"Content-Type\": \"application/json\", \"X-WP-Nonce\": restNonce };\n  }\n\n  // Push signal if it exists\n  if (signal) payload.signal = signal;\n\n  // Construct URL with query parameters\n  const rest_url = new URL(`${restBase}${endpoint}`);\n  Object.entries(params).forEach(([key, value]) => {\n    if (value != null && value != \"\") {\n      rest_url.searchParams.append(key, value);\n    }\n  });\n\n  const response = await fetch(rest_url.toString(), payload);\n\n  // Generic error\n  if (!response.ok) {\n    try {\n      const errorResponse = await response.json();\n      return doError(errorResponse.code || \"Unable to connect\", errorResponse.message || errorResponse.error, true);\n    } catch (err) {\n      return doError(\"Unable to connect\", \"Unable to connect to remote services at this time\", true);\n    }\n  }\n\n  const result = await response.json();\n\n  // Server error\n  if (result.error) return doError(result.title || result.error, result.message);\n\n  const totalItems = response.headers.get(\"X-WP-Total\");\n  const totalPages = response.headers.get(\"X-WP-TotalPages\");\n\n  return { data: result, totalItems, totalPages };\n};\n\n/**\n * Helper function for errors\n *\n * @param {String} - title\n * @param {String} - message\n *\n * @since 0.0.1\n */\nconst doError = (title, message, dontLog) => {\n  if (!showErrrors) return;\n\n  notify({ type: \"error\", title, message });\n};\n\n/**\n * Formats params into a URL query string, excluding null and undefined values\n *\n * @param {Object} params - The parameters to be formatted\n * @returns {string} The formatted query string, including the leading '?' if non-empty\n *\n * @since 4.0.0\n */\nconst getParams = (params) => {\n  if (!params || typeof params !== \"object\") return \"\";\n\n  const filteredParams = Object.entries(params)\n    .filter(([_, value]) => value != null)\n    .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\n  const queryParams = new URLSearchParams(filteredParams);\n  const queryString = queryParams.toString();\n\n  return queryString ? `?${queryString}` : \"\";\n};\n"],"names":["showErrrors","lmnFetch","endpoint","type","data","params","signal","isFormData","logging","hideErrors","appStore","useAppStore","restNonce","restBase","payload","rest_url","key","value","response","errorResponse","doError","result","totalItems","totalPages","title","message","dontLog","notify"],"mappings":"sFAIA,IAAIA,EAAc,GAcN,MAACC,EAAW,MAAO,CAAE,SAAAC,EAAW,GAAI,KAAAC,EAAO,MAAO,KAAAC,EAAO,CAAA,EAAI,OAAAC,EAAS,CAAE,EAAE,OAAAC,EAAS,KAAM,WAAAC,EAAa,GAAO,QAAAC,EAAU,GAAO,WAAAC,EAAa,MAAY,CACjK,MAAMC,EAAWC,EAAa,EAGxBC,EAAYF,EAAS,MAAM,UAC3BG,EAAWH,EAAS,MAAM,SAEhCV,EAAcS,IAAe,GAE7B,MAAMK,EAAU,CAAE,OAAQX,EAAM,QAAS,CAAA,CAAI,EAGzCA,IAAS,MACPI,GAEFO,EAAQ,KAAOV,EACfU,EAAQ,QAAU,CAChB,aAAcF,CACf,IAEDE,EAAQ,KAAO,KAAK,UAAUV,CAAI,EAClCU,EAAQ,QAAU,CAChB,eAAgB,mBAChB,aAAcF,CACf,GAGHE,EAAQ,QAAU,CAAE,eAAgB,mBAAoB,aAAcF,CAAW,EAI/EN,IAAQQ,EAAQ,OAASR,GAG7B,MAAMS,EAAW,IAAI,IAAI,GAAGF,CAAQ,GAAGX,CAAQ,EAAE,EACjD,OAAO,QAAQG,CAAM,EAAE,QAAQ,CAAC,CAACW,EAAKC,CAAK,IAAM,CAC3CA,GAAS,MAAQA,GAAS,IAC5BF,EAAS,aAAa,OAAOC,EAAKC,CAAK,CAE7C,CAAG,EAED,MAAMC,EAAW,MAAM,MAAMH,EAAS,SAAQ,EAAID,CAAO,EAGzD,GAAI,CAACI,EAAS,GACZ,GAAI,CACF,MAAMC,EAAgB,MAAMD,EAAS,KAAM,EAC3C,OAAOE,EAAQD,EAAc,MAAQ,oBAAqBA,EAAc,SAAWA,EAAc,MAAO,EAAI,CAC7G,MAAa,CACZ,OAAOC,EAAQ,oBAAqB,mDAAyD,CACnG,CAGE,MAAMC,EAAS,MAAMH,EAAS,KAAM,EAGpC,GAAIG,EAAO,MAAO,OAAOD,EAAQC,EAAO,OAASA,EAAO,MAAOA,EAAO,OAAO,EAE7E,MAAMC,EAAaJ,EAAS,QAAQ,IAAI,YAAY,EAC9CK,EAAaL,EAAS,QAAQ,IAAI,iBAAiB,EAEzD,MAAO,CAAE,KAAMG,EAAQ,WAAAC,EAAY,WAAAC,CAAY,CACjD,EAUMH,EAAU,CAACI,EAAOC,EAASC,IAAY,CACtC1B,GAEL2B,EAAO,CAAE,KAAM,QAAS,MAAAH,EAAO,QAAAC,CAAO,CAAE,CAC1C"}