{"version":3,"file":"index-CpvGQOEp.js","sources":["../../src/components/utility/checkbox-input/index.vue","../../src/assets/js/functions/isNonProduction.js","../../src/components/utility/status-tag/index.vue","../../src/components/app/settings/index.vue"],"sourcesContent":["<script setup>\nimport { defineModel, useAttrs, watchEffect, defineProps } from \"vue\";\n\nimport AppIcon from \"@/components/utility/icons/index.vue\";\n\nconst model = defineModel();\nconst attrs = useAttrs();\nconst props = defineProps([\"dynamic\"]);\n\nconst isNullOrUndefined = (value) => {\n  return value === null || value === undefined;\n};\n\nwatchEffect(() => {\n  if (isNullOrUndefined(props.dynamic)) return;\n  model.value = props.dynamic;\n});\n</script>\n\n<template>\n  <div class=\"relative inline-flex\">\n    <input\n      type=\"checkbox\"\n      v-model=\"model\"\n      class=\"appearance-none w-4 h-4 text-indigo-600 bg-zinc-100 border-zinc-300 rounded focus:ring-indigo-500 dark:focus:ring-indigo-600 dark:ring-offset-zinc-800 focus:ring-2 dark:bg-zinc-700 dark:border-zinc-600 checked:bg-indigo-500\"\n      v-bind=\"attrs\"\n    />\n    <Transition>\n      <div class=\"absolute inset-0 flex flex-col place-content-center\" v-if=\"model\">\n        <AppIcon icon=\"tick\" class=\"text-white mx-auto\" />\n      </div>\n    </Transition>\n  </div>\n</template>\n","export const isNonProduction = (hostname = window.location.hostname) => {\n  // List of common development/staging subdomains\n  const devSubdomains = [\"dev\", \"development\", \"staging\", \"test\", \"testing\", \"beta\", \"qa\", \"uat\"];\n\n  const parts = hostname.split(\".\");\n  const isInstawp = parts.includes(\"instawp\");\n\n  // Function to check if hostname starts with any of the dev subdomains\n  const startsWithDevSubdomain = (hostname) => devSubdomains.some((subdomain) => hostname.startsWith(`${subdomain}.`) || hostname === subdomain);\n\n  // Original localhost checks\n  const isLocalhost = hostname === \"localhost\" || hostname === \"instawp\" || hostname === \"[::1]\" || hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/);\n\n  // Development TLD checks\n  const isDevTLD =\n    hostname.endsWith(\".local\") || hostname.endsWith(\".test\") || hostname.endsWith(\".localhost\") || hostname.endsWith(\".example\") || hostname.endsWith(\".invalid\") || hostname.endsWith(\".dev\"); // Note: .dev is now a valid public TLD, but often used for development\n\n  // Local network IP checks\n  const isLocalIP = /^10\\./.test(hostname) || /^172\\.(1[6-9]|2\\d|3[01])\\./.test(hostname) || /^192\\.168\\./.test(hostname);\n\n  // Combine all checks\n  return (\n    isInstawp ||\n    isLocalhost ||\n    isDevTLD ||\n    isLocalIP ||\n    startsWithDevSubdomain(hostname) ||\n    // Add any custom checks here\n    false // Change to `true` to consider additional custom conditions\n  );\n};\n","<script setup>\nimport { ref, computed } from \"vue\";\nconst props = defineProps([\"status\", \"text\"]);\n\nconst returnStatusClasses = computed(() => {\n  if (props.status === \"success\") return \" text-green-600 border-green-300 dark:text-green-700 dark:border-green-700/80\";\n  if (props.status === \"warning\") return \" text-orange-600 border-orange-300 dark:text-orange-700 dark:border-orange-700/80\";\n  if (props.status === \"danger\") return \" text-red-500 border-red-30 dark:text-red-700 dark:border-red-700/80\";\n  return \"text-zinc-500 border-zinc-300 dark:text-zinc-400 dark:border-zinc-700\";\n});\nconst returnStatusGlowClasses = computed(() => {\n  if (props.status === \"success\") return \"bg-green-300 dark:bg-green-700/80\";\n  if (props.status === \"warning\") return \"bg-orange-300 dark:bg-orange-700/80\";\n  if (props.status === \"danger\") return \"bg-red-300 dark:bg-red-700/80\";\n  return \"bg-zinc-300 dark:bg-zinc-700\";\n});\nconst returnStatusCircleClasses = computed(() => {\n  if (props.status === \"success\") return \"bg-green-500 dark:bg-green-700/80\";\n  if (props.status === \"warning\") return \"bg-orange-500  dark:bg-orange-700/80\";\n  if (props.status === \"danger\") return \"bg-red-500  dark:bg-red-700/80\";\n  return \"bg-zinc-500  dark:bg-zinc-700\";\n});\n</script>\n\n<template>\n  <div class=\"flex gap-2 flex-row relative items-center rounded-md text-xs py-1 px-2 inline-flex border transition-all\" :class=\"returnStatusClasses\">\n    <span class=\"relative flex h-2 w-2\">\n      <span class=\"animate-ping absolute inline-flex h-full w-full rounded-full opacity-75\" :class=\"returnStatusGlowClasses\" style=\"animation-duration: 1.5s\"></span>\n      <span class=\"relative inline-flex rounded-full h-2 w-3\" :class=\"returnStatusCircleClasses\"></span>\n    </span>\n    <div class=\"font-mono\">{{ text }}</div>\n  </div>\n</template>\n","<script setup>\nimport { ref, defineProps } from \"vue\";\nimport AppInput from \"@/components/utility/text-input/index.vue\";\nimport AppToggle from \"@/components/utility/toggle/index.vue\";\nimport AppIcon from \"@/components/utility/icons/index.vue\";\nimport AppButton from \"@/components/utility/app-button/index.vue\";\nimport Confirm from \"@/components/utility/confirm/index.vue\";\nimport AppCheckbox from \"@/components/utility/checkbox-input/index.vue\";\n\n// Funcs\nimport { isNonProduction } from \"@/assets/js/functions/isNonProduction.js\";\nimport { lmnFetch } from \"@/assets/js/functions/lmnFetch.js\";\nimport { isObject } from \"@/assets/js/functions/isObject.js\";\nimport { notify } from \"@/assets/js/functions/notify.js\";\n\n// Comps\nimport StatusTag from \"@/components/utility/status-tag/index.vue\";\n\n// Color scheme\nimport { setupColorScheme, useColorScheme } from \"@/assets/js/functions/useColorScheme.js\";\nsetupColorScheme();\nconst { prefersDark, setColorScheme, userPreference } = useColorScheme();\n\n// Store\nimport { useAppStore } from \"@/store/app/app.js\";\nconst appStore = useAppStore();\n\nconst props = defineProps([\"modal\"]);\nconst loading = ref(false);\nconst confirm = ref(null);\nconst snipvault_settings = ref({});\nconst originalSettings = ref({});\nconst newKey = ref(\"\");\nconst deleting = ref(false);\nconst keyactions = ref(false);\nconst saving = ref(false);\nconst organization_id = \"7a270461-0edc-45ce-a72a-40180d7aec7c\";\nimport { folders, snippets } from \"@/components/app/snippets-list/src/constants.js\";\n\n// New variables for PHP global variables\nconst newGlobalKey = ref(\"\");\nconst newGlobalValue = ref(\"\");\n\n/**\n * Fetches site settings from the server and updates the application state.\n *\n * This function performs the following operations:\n * 1. Sets the application loading state to true.\n * 2. Fetches settings from the 'wp/v2/settings' endpoint.\n * 3. Updates the application loading state to false.\n * 4. If the response is valid and contains snipvault_settings, it updates the local state.\n * 5. Creates a deep copy of the settings for tracking original values.\n * 6. Sets a flag indicating that settings have been fetched.\n *\n * @async\n * @function getSettings\n * @returns {Promise<void>}\n * @throws Will not throw, but will return early if the response is invalid.\n */\nconst getSettings = async () => {\n  appStore.updateState(\"loading\", true);\n  loading.value = true;\n\n  const args = { endpoint: \"wp/v2/settings\", params: {} };\n  const response = await lmnFetch(args);\n\n  appStore.updateState(\"loading\", false);\n  loading.value = false;\n\n  // Something went wrong\n  if (!response) return;\n\n  if (!response.data.snipvault_settings || !isObject(response.data.snipvault_settings)) return;\n\n  snipvault_settings.value = response.data.snipvault_settings;\n\n  // Initialize PHP global variables array if it doesn't exist\n  if (!snipvault_settings.value.php_global_variables) {\n    snipvault_settings.value.php_global_variables = [];\n  }\n\n  originalSettings.value = JSON.parse(JSON.stringify(response.data.snipvault_settings));\n\n  if (snipvault_settings.value.license_key) {\n    const validKey = await isValidLicenseKey();\n    if (!validKey) {\n      removeKey();\n    }\n  }\n};\n\n/**\n * Activates a license key with the Polar.sh API\n *\n */\nconst isValidLicenseKey = async () => {\n  // Format the request payload\n  const payload = {\n    key: snipvault_settings.value.license_key,\n    activation_id: snipvault_settings.value.instance_id,\n    organization_id,\n  };\n\n  try {\n    // Set up default fetch options\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    };\n\n    // Make the API request\n    const response = await fetch(\"https://api.polar.sh/v1/customer-portal/license-keys/validate\", options);\n\n    // Check if the request was successful\n    if (!response.ok) {\n      return false;\n    }\n\n    // Parse and return the JSON response\n    const activationResponse = await response.json();\n\n    if (activationResponse.status) {\n      return true;\n    }\n  } catch (error) {\n    return false;\n  }\n\n  return false;\n};\n\n/**\n * Activates a license key with the Polar.sh API\n *\n */\nconst activatePolarLicense = async () => {\n  appStore.updateState(\"loading\", true);\n  keyactions.value = true;\n\n  // Format the request payload\n  const payload = {\n    key: newKey.value,\n    label: appStore.state.siteURL,\n    organization_id,\n  };\n\n  try {\n    // Set up default fetch options\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    };\n\n    // Make the API request\n    const response = await fetch(\"https://api.polar.sh/v1/customer-portal/license-keys/activate\", options);\n    appStore.updateState(\"loading\", false);\n    keyactions.value = false;\n\n    // Check if the request was successful\n    if (!response.ok) {\n      const errorText = await response.json();\n      notify({ title: __(\"Failed to activate license\", \"snipvault\"), message: errorText.detail });\n      return;\n    }\n\n    // Parse and return the JSON response\n    const activationResponse = await response.json();\n\n    snipvault_settings.value.license_key = newKey.value;\n    snipvault_settings.value.instance_id = activationResponse.id;\n\n    updateSettings();\n  } catch (error) {\n    // Re-throw with a more helpful message\n    notify({ title: __(\"Failed to activate license\", \"snipvault\"), message: error.message });\n    appStore.updateState(\"loading\", false);\n    keyactions.value = false;\n  }\n};\n\nconst removeKey = () => {\n  snipvault_settings.value.license_key = \"\";\n  snipvault_settings.value.instance_id = \"\";\n  updateSettings();\n};\n\n/**\n * Updates the site settings on the server and in the local application state.\n *\n * This function performs the following operations:\n * 1. Sets the application loading state and local saving state to true.\n * 2. Creates a payload with the current snipvault_settings.\n * 3. Sends a POST request to the 'wp/v2/settings' endpoint with the payload.\n * 4. Updates the application loading state and local saving state to false.\n * 5. If the update is successful, it notifies the user and updates the application state.\n *\n * @async\n * @function updateSettings\n * @returns {Promise<void>}\n * @throws Will not throw, but will return early if the response is invalid.\n */\nconst updateSettings = async () => {\n  appStore.updateState(\"loading\", true);\n  saving.value = true;\n\n  let payload = {\n    snipvault_settings: JSON.parse(JSON.stringify(snipvault_settings.value)),\n  };\n\n  const args = { endpoint: \"wp/v2/settings\", type: \"POST\", params: {}, data: payload };\n  const response = await lmnFetch(args);\n\n  appStore.updateState(\"loading\", false);\n  saving.value = false;\n\n  // Something went wrong\n  if (!response) return;\n\n  notify({ title: __(\"Settings updated!\", \"snipvault\"), type: \"success\" });\n\n  appStore.updateState(\"snipvault_settings\", snipvault_settings.value);\n};\n\nconst disableFileBrowsing = async () => {\n  appStore.updateState(\"loading\", true);\n\n  const args = { endpoint: \"snipvault/v1/filesystem/disable\", type: \"POST\" };\n  const response = await lmnFetch(args);\n\n  appStore.updateState(\"loading\", false);\n\n  // Something went wrong\n  if (!response) return;\n\n  notify({ title: __(\"File browsing disabled\", \"snipvault\"), message: __(\"You can reenable file browsing by visiting the file browser\", \"snipvault\"), type: \"success\" });\n};\n\nconst deleteEverything = async () => {\n  // Confirm user intent\n  const userResponse = await confirm.value.show({\n    title: __(\"Are you sure?\", \"snipvault\"),\n    message: __(\"This will delete all snippets and folders from your database. This action can't be undone.\", \"snipvault\"),\n    okButton: __(\"Yes delete it all\", \"snipvault\"),\n  });\n\n  // Bailed by user\n  if (!userResponse) return;\n\n  // Set deleting state to true\n  deleting.value = true;\n\n  try {\n    // Create array of promises for snippet deletion\n    const snippetPromises = snippets.value.map((snippet) => {\n      const args = {\n        endpoint: `wp/v2/svsnippets/${snippet.id}`,\n        type: \"DELETE\",\n        params: { force: true },\n      };\n      return lmnFetch(args);\n    });\n\n    // Create array of promises for folder deletion\n    const folderPromises = folders.value.map((folder) => {\n      const args = {\n        endpoint: `wp/v2/svfolders/${folder.id}`,\n        type: \"DELETE\",\n        params: { force: true },\n      };\n      return lmnFetch(args);\n    });\n\n    // Execute all delete operations in parallel\n    const [snippetResults, folderResults] = await Promise.all([Promise.all(snippetPromises), Promise.all(folderPromises)]);\n\n    // Show success notification\n    notify({\n      title: __(\"Deletion Complete\", \"snipvault\"),\n      message: __(`Successfully deleted ${snippetResults.length} snippets and ${folderResults.length} folders.`, \"snipvault\"),\n      type: \"success\",\n    });\n\n    // Reset or refresh your data as needed\n    // You might want to clear the arrays or refetch data\n    snippets.value = [];\n    folders.value = [];\n  } catch (error) {\n    // Show error notification\n    notify({\n      title: __(\"Deletion Error\", \"snipvault\"),\n      message: __(\"There was a problem deleting your content. Please try again.\", \"snipvault\"),\n      type: \"error\",\n    });\n  } finally {\n    // Set deleting state back to false when done (whether successful or not)\n    deleting.value = false;\n  }\n};\n\n/**\n * Sanitizes a string to make it a valid PHP variable name\n * - Replaces spaces and special characters with underscores\n * - Ensures it starts with a letter or underscore\n * - Removes any characters that aren't alphanumeric or underscores\n *\n * @param {string} key - The input string to sanitize\n * @return {string} - A valid PHP variable name\n */\nconst sanitizePhpVariableName = (key) => {\n  if (!key || key.trim() === \"\") return \"\";\n\n  // First, convert all spaces and special chars to underscores\n  let sanitized = key.trim().replace(/[^a-zA-Z0-9_]/g, \"_\");\n\n  // Make sure it starts with a letter or underscore\n  if (!/^[a-zA-Z_]/.test(sanitized)) {\n    sanitized = \"_\" + sanitized;\n  }\n\n  return sanitized;\n};\n\n/**\n * Adds a new PHP global variable to the settings\n */\nconst addGlobalVariable = () => {\n  // Validate input\n  if (!newGlobalKey.value.trim() || !newGlobalValue.value.trim()) {\n    notify({\n      title: __(\"Invalid Input\", \"snipvault\"),\n      message: __(\"Both key and value must be provided\", \"snipvault\"),\n      type: \"error\",\n    });\n    return;\n  }\n\n  // Sanitize the key to ensure it's a valid PHP variable name\n  const sanitizedKey = sanitizePhpVariableName(newGlobalKey.value);\n\n  if (!sanitizedKey) {\n    notify({\n      title: __(\"Invalid Input\", \"snipvault\"),\n      message: __(\"Please provide a valid variable name\", \"snipvault\"),\n      type: \"error\",\n    });\n    return;\n  }\n\n  // Check if key already exists\n  const exists = snipvault_settings.value.php_global_variables.some((variable) => variable.key === sanitizedKey.trim());\n\n  if (exists) {\n    notify({\n      title: __(\"Duplicate Key\", \"snipvault\"),\n      message: __(\"This variable key already exists\", \"snipvault\"),\n      type: \"error\",\n    });\n    return;\n  }\n\n  // Add new variable\n  snipvault_settings.value.php_global_variables.push({\n    key: sanitizedKey.trim(),\n    value: newGlobalValue.value.trim(),\n  });\n\n  // Clear input fields\n  newGlobalKey.value = \"\";\n  newGlobalValue.value = \"\";\n};\n\n/**\n * Removes a PHP global variable from the settings\n */\nconst removeGlobalVariable = (index) => {\n  snipvault_settings.value.php_global_variables.splice(index, 1);\n};\n\ngetSettings();\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-6 w-full overflow-auto h-full\">\n    <div class=\"flex flex-row items-center place-content-between p-6 border-b border-zinc-200 dark:border-zinc-700\">\n      <div class=\"col-span-3 text-lg text-zinc-900 dark:text-zinc-100\">{{ __(\"Plugin settings\", \"snipvault\") }}</div>\n\n      <div class=\"flex flex-row justify-end items-center gap-3\">\n        <AppButton type=\"primary\" @click=\"updateSettings\" :loading=\"saving\">{{ __(\"Save\", \"snipvault\") }}</AppButton>\n      </div>\n    </div>\n\n    <div class=\"grid grid-cols-3 gap-12 p-6 gap-x-24\" v-if=\"loading\">\n      <template v-for=\"index in 3\">\n        <div class=\"w-full rounded-lg bg-zinc-100 dark:bg-zinc-800 h-8 animate-pulse\"></div>\n        <div class=\"col-span-2 rounded-lg bg-zinc-100 dark:bg-zinc-800 h-8 animate-pulse\"></div>\n      </template>\n    </div>\n\n    <div class=\"grid grid-cols-3 gap-12 p-6 gap-x-24\" v-if=\"!loading\">\n      <!-- Key -->\n      <div class=\"flex flex-col\">\n        <span class=\"\">{{ __(\"Licence key\", \"snipvault\") }}</span>\n        <span class=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">{{ __(\"Enter a valid licence key to activate SnipVault.\", \"snipvault\") }}</span>\n      </div>\n\n      <div class=\"col-span-2\" v-if=\"snipvault_settings.license_key || snipvault_settings.instance_id\">\n        <div class=\"flex flex-row gap-3\">\n          <StatusTag status=\"success\" :text=\"__('Licence Active', 'snipvault')\" class=\"text-lg py-2\" />\n        </div>\n      </div>\n\n      <div v-else class=\"col-span-2\">\n        <div class=\"flex flex-row gap-3\">\n          <AppInput v-model=\"newKey\" class=\"col-span-2 grow\" icon=\"key\" :placeholder=\"__('SnipVault licence key', 'snipvault')\" />\n          <AppButton type=\"default\" :disabled=\"!newKey\" @click=\"activatePolarLicense\" :loading=\"keyactions\">{{ __(\"Activate\", \"snipvault\") }}</AppButton>\n        </div>\n        <div class=\"bg-emerald-100 dark:bg-emerald-600/20 border border-emerald-400 dark:border-emerald-700 p-2 rounded-lg text-sm mt-3\" v-if=\"isNonProduction()\">\n          {{ __(\"Development server detected, no need to activate your licence key.\", \"snipvault\") }}\n        </div>\n      </div>\n\n      <!-- Anthropic key data -->\n      <div class=\"flex flex-col\">\n        <span class=\"\">{{ __(\"Anthropic API key\", \"snipvault\") }}</span>\n        <span class=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">{{ __(\"Enter your Anthropic API key to enable AI features and Claude integration\", \"snipvault\") }}</span>\n      </div>\n      <div class=\"col-span-2\">\n        <AppInput v-model=\"snipvault_settings.anthropic_key\" class=\"w-1/2\" icon=\"key\" type=\"password\" placeholder=\"xxxx-xxxx-xxxx-xxxx\" />\n      </div>\n\n      <!-- Disable file browsing -->\n      <div class=\"flex flex-col\">\n        <span class=\"\">{{ __(\"Disable file browsing\", \"snipvault\") }}</span>\n        <span class=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">{{ __(\"Turn off the server file browsing functionality for all users\", \"snipvault\") }}</span>\n      </div>\n      <div class=\"col-span-2 flex flex-row items-start\">\n        <AppToggle v-model=\"snipvault_settings.file_browsing_disabled\" style=\"width: 50%\" />\n      </div>\n\n      <!-- Disable SWL Editor -->\n      <div class=\"flex flex-col\">\n        <span class=\"\">{{ __(\"Disable SQL editor\", \"snipvault\") }}</span>\n        <span class=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">{{ __(\"Turn off the SQL database editor functionality for all users\", \"snipvault\") }}</span>\n      </div>\n      <div class=\"col-span-2\">\n        <AppToggle v-model=\"snipvault_settings.sql_editor_disabled\" style=\"width: 50%\" />\n      </div>\n\n      <!-- WP-CLI disabled -->\n      <div class=\"flex flex-col\">\n        <span class=\"\">{{ __(\"Disable WP-CLI\", \"snipvault\") }}</span>\n        <span class=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">{{ __(\"Turn off the WordPress command line interface functionality for all users\", \"snipvault\") }}</span>\n      </div>\n      <div class=\"col-span-2\">\n        <AppToggle v-model=\"snipvault_settings.wp_sql_disabled\" style=\"width: 50%\" />\n      </div>\n\n      <!-- Delete data -->\n      <div class=\"flex flex-col\">\n        <span class=\"\">{{ __(\"Delete snippets & folders\", \"snipvault\") }}</span>\n        <span class=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">{{ __(\"Permanently delete all stored code snippets and organizational folders\", \"snipvault\") }}</span>\n      </div>\n      <div class=\"col-span-2\">\n        <AppButton type=\"danger\" @click=\"deleteEverything\" :loading=\"deleting\">{{ __(\"Delete\", \"snipvault\") }}</AppButton>\n      </div>\n\n      <!-- Font size -->\n      <div class=\"flex flex-col\">\n        <span class=\"\">{{ __(\"Code editor font size\", \"snipvault\") }}</span>\n        <span class=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">{{ __(\"Alter the default code editor font size. Default is 12.\", \"snipvault\") }}</span>\n      </div>\n      <div class=\"col-span-2\">\n        <AppInput v-model=\"snipvault_settings.code_font_size\" class=\"w-1/2\" type=\"number\" placeholder=\"12\" />\n      </div>\n\n      <!-- Theme -->\n      <div class=\"flex flex-col\">\n        <span class=\"\">{{ __(\"Theme\", \"snipvault\") }}</span>\n        <span class=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">{{ __(\"Choose between light, dark, or system default color theme for the SnipVault interface\", \"snipvault\") }}</span>\n      </div>\n\n      <div class=\"col-span-2 flex flex-col gap-2\">\n        <label class=\"flex flex-row items-center gap-2 px-2 mt-2 cursor-pointer\" @click.stop.prevent=\"setColorScheme('system')\">\n          <AppCheckbox :dynamic=\"userPreference == 'system' ? true : false\" />\n          <span class=\"dark:text-zinc-400\">{{ __(\"System\", \"uixpress\") }}</span>\n        </label>\n\n        <label class=\"flex flex-row items-center gap-2 px-2 cursor-pointer\" @click.stop.prevent=\"setColorScheme('light')\">\n          <AppCheckbox :dynamic=\"userPreference == 'light' ? true : false\" />\n          <span class=\"dark:text-zinc-400\">{{ __(\"Light\", \"uixpress\") }}</span>\n        </label>\n\n        <label class=\"flex flex-row items-center gap-2 px-2 cursor-pointer\" @click.stop.prevent=\"setColorScheme('dark')\">\n          <AppCheckbox :dynamic=\"userPreference == 'dark' ? true : false\" />\n          <span class=\"dark:text-zinc-400\">{{ __(\"Dark\", \"uixpress\") }}</span>\n        </label>\n      </div>\n\n      <!-- PHP Global Variables - New Section -->\n      <div class=\"flex flex-col\">\n        <span class=\"\">{{ __(\"PHP Global Variables\", \"snipvault\") }}</span>\n        <span class=\"text-sm text-zinc-500 dark:text-zinc-400 mt-1\">{{ __(\"Define global PHP variables that will be available in your code snippets\", \"snipvault\") }}</span>\n      </div>\n      <div class=\"col-span-2\">\n        <!-- Add new variable form -->\n        <div class=\"flex flex-row gap-3 mb-4\">\n          <AppInput v-model=\"newGlobalKey\" class=\"grow\" placeholder=\"Variable name\" />\n          <AppInput v-model=\"newGlobalValue\" class=\"grow\" placeholder=\"Variable value\" />\n          <AppButton type=\"default\" @click=\"addGlobalVariable\">{{ __(\"Add\", \"snipvault\") }}</AppButton>\n        </div>\n\n        <!-- List of existing variables -->\n        <div class=\"max-h-80 overflow-y-auto border border-zinc-200 dark:border-zinc-700 rounded-lg\">\n          <table class=\"w-full\" v-if=\"snipvault_settings.php_global_variables && snipvault_settings.php_global_variables.length > 0\">\n            <thead class=\"bg-zinc-100 dark:bg-zinc-800\">\n              <tr>\n                <th class=\"text-left p-3\">{{ __(\"Variable Name\", \"snipvault\") }}</th>\n                <th class=\"text-left p-3\">{{ __(\"Value\", \"snipvault\") }}</th>\n                <th class=\"text-right p-3 w-24\">{{ __(\"Action\", \"snipvault\") }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(variable, index) in snipvault_settings.php_global_variables\" :key=\"index\" class=\"border-t border-zinc-200 dark:border-zinc-700\">\n                <td class=\"p-3 font-mono text-sm\">{{ variable.key }}</td>\n                <td class=\"p-3 overflow-hidden text-ellipsis\">{{ variable.value }}</td>\n                <td class=\"p-3 text-right\">\n                  <button @click=\"removeGlobalVariable(index)\" class=\"text-red-500 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300\">\n                    <AppIcon icon=\"trash\" class=\"w-5 h-5\" />\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <div v-else class=\"p-6 text-center text-zinc-500 dark:text-zinc-400\">\n            {{ __(\"No global variables defined yet\", \"snipvault\") }}\n          </div>\n        </div>\n        <div class=\"text-sm mt-2 text-zinc-500 dark:text-zinc-400\">\n          {{ __(\"These variables will be available globally in all PHP script execution contexts\", \"snipvault\") }}\n        </div>\n      </div>\n    </div>\n\n    <Confirm ref=\"confirm\" />\n  </div>\n</template>\n"],"names":["model","_useModel","attrs","useAttrs","props","__props","isNullOrUndefined","value","watchEffect","isNonProduction","hostname","devSubdomains","isInstawp","startsWithDevSubdomain","subdomain","isLocalhost","isDevTLD","isLocalIP","returnStatusClasses","computed","returnStatusGlowClasses","returnStatusCircleClasses","organization_id","setupColorScheme","setColorScheme","userPreference","useColorScheme","appStore","useAppStore","loading","ref","confirm","snipvault_settings","originalSettings","newKey","deleting","keyactions","saving","newGlobalKey","newGlobalValue","getSettings","response","lmnFetch","isObject","isValidLicenseKey","removeKey","payload","options","activatePolarLicense","errorText","notify","activationResponse","updateSettings","error","deleteEverything","snippetPromises","snippets","snippet","args","folderPromises","folders","folder","snippetResults","folderResults","sanitizePhpVariableName","key","sanitized","addGlobalVariable","sanitizedKey","variable","removeGlobalVariable","index"],"mappings":"2tBAKM,MAAAA,EAAQC,iBAAY,EACpBC,EAAQC,GAAS,EACjBC,EAAQC,EAERC,EAAqBC,GAClBA,GAAU,KAGnB,OAAAC,GAAY,IAAM,CACZF,EAAkBF,EAAM,OAAO,IACnCJ,EAAM,MAAQI,EAAM,QAAA,CACrB,6eChBYK,GAAkB,CAACC,EAAW,OAAO,SAAS,WAAa,CAEtE,MAAMC,EAAgB,CAAC,MAAO,cAAe,UAAW,OAAQ,UAAW,OAAQ,KAAM,KAAK,EAGxFC,EADQF,EAAS,MAAM,GAAG,EACR,SAAS,SAAS,EAGpCG,EAA0BH,GAAaC,EAAc,KAAMG,GAAcJ,EAAS,WAAW,GAAGI,CAAS,GAAG,GAAKJ,IAAaI,CAAS,EAGvIC,EAAcL,IAAa,aAAeA,IAAa,WAAaA,IAAa,SAAWA,EAAS,MAAM,wDAAwD,EAGnKM,EACJN,EAAS,SAAS,QAAQ,GAAKA,EAAS,SAAS,OAAO,GAAKA,EAAS,SAAS,YAAY,GAAKA,EAAS,SAAS,UAAU,GAAKA,EAAS,SAAS,UAAU,GAAKA,EAAS,SAAS,MAAM,EAGtLO,EAAY,QAAQ,KAAKP,CAAQ,GAAK,6BAA6B,KAAKA,CAAQ,GAAK,cAAc,KAAKA,CAAQ,EAGtH,OACEE,GACAG,GACAC,GACAC,GACAJ,EAAuBH,CAAQ,GAE/B,EAEJ,gHC5BA,MAAMN,EAAQC,EAERa,EAAsBC,EAAS,IAC/Bf,EAAM,SAAW,UAAkB,gFACnCA,EAAM,SAAW,UAAkB,oFACnCA,EAAM,SAAW,SAAiB,uEAC/B,uEACR,EACKgB,EAA0BD,EAAS,IACnCf,EAAM,SAAW,UAAkB,oCACnCA,EAAM,SAAW,UAAkB,sCACnCA,EAAM,SAAW,SAAiB,gCAC/B,8BACR,EACKiB,EAA4BF,EAAS,IACrCf,EAAM,SAAW,UAAkB,oCACnCA,EAAM,SAAW,UAAkB,uCACnCA,EAAM,SAAW,SAAiB,iCAC/B,+BACR,4/FCeKkB,EAAkB,mFAhBPC,GAAA,EACjB,KAAM,CAAe,eAAAC,EAAgB,eAAAC,GAAmBC,GAAe,EAIjEC,EAAWC,GAAY,EAGvBC,EAAUC,EAAI,EAAK,EACnBC,EAAUD,EAAI,IAAI,EAClBE,EAAqBF,EAAI,EAAE,EAC3BG,EAAmBH,EAAI,EAAE,EACzBI,EAASJ,EAAI,EAAE,EACfK,EAAWL,EAAI,EAAK,EACpBM,EAAaN,EAAI,EAAK,EACtBO,EAASP,EAAI,EAAK,EAKlBQ,EAAeR,EAAI,EAAE,EACrBS,EAAiBT,EAAI,EAAE,EAkBvBU,EAAc,SAAY,CACrBb,EAAA,YAAY,UAAW,EAAI,EACpCE,EAAQ,MAAQ,GAGV,MAAAY,EAAW,MAAMC,EADV,CAAE,SAAU,iBAAkB,OAAQ,CAAA,CAAG,CAClB,EAE3Bf,EAAA,YAAY,UAAW,EAAK,EACrCE,EAAQ,MAAQ,GAGXY,IAED,CAACA,EAAS,KAAK,oBAAsB,CAACE,GAASF,EAAS,KAAK,kBAAkB,IAEhET,EAAA,MAAQS,EAAS,KAAK,mBAGpCT,EAAmB,MAAM,uBACTA,EAAA,MAAM,qBAAuB,CAAC,GAGlCC,EAAA,MAAQ,KAAK,MAAM,KAAK,UAAUQ,EAAS,KAAK,kBAAkB,CAAC,EAEhFT,EAAmB,MAAM,cACV,MAAMY,EAAkB,GAE7BC,EAAA,IAGhB,EAMMD,EAAoB,SAAY,CAEpC,MAAME,EAAU,CACd,IAAKd,EAAmB,MAAM,YAC9B,cAAeA,EAAmB,MAAM,YACxC,gBAAAV,CACF,EAEI,GAAA,CAEF,MAAMyB,EAAU,CACd,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUD,CAAO,CAC9B,EAGML,EAAW,MAAM,MAAM,gEAAiEM,CAAO,EAGjG,GAAA,CAACN,EAAS,GACL,MAAA,GAMT,IAF2B,MAAMA,EAAS,KAAK,GAExB,OACd,MAAA,QAEK,CACP,MAAA,EAAA,CAGF,MAAA,EACT,EAMMO,EAAuB,SAAY,CAC9BrB,EAAA,YAAY,UAAW,EAAI,EACpCS,EAAW,MAAQ,GAGnB,MAAMU,EAAU,CACd,IAAKZ,EAAO,MACZ,MAAOP,EAAS,MAAM,QACtB,gBAAAL,CACF,EAEI,GAAA,CAEF,MAAMyB,EAAU,CACd,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUD,CAAO,CAC9B,EAGML,EAAW,MAAM,MAAM,gEAAiEM,CAAO,EAKjG,GAJKpB,EAAA,YAAY,UAAW,EAAK,EACrCS,EAAW,MAAQ,GAGf,CAACK,EAAS,GAAI,CACV,MAAAQ,EAAY,MAAMR,EAAS,KAAK,EAC/BS,EAAA,CAAE,SAAO,OAAG,GAAA,KAAA,IAAA,6BAA8B,WAAW,EAAG,QAASD,EAAU,MAAA,CAAQ,EAC1F,MAAA,CAII,MAAAE,EAAqB,MAAMV,EAAS,KAAK,EAE5BT,EAAA,MAAM,YAAcE,EAAO,MAC3BF,EAAA,MAAM,YAAcmB,EAAmB,GAE3CC,EAAA,QACRC,EAAO,CAEPH,EAAA,CAAE,SAAO,OAAG,GAAA,KAAA,IAAA,6BAA8B,WAAW,EAAG,QAASG,EAAM,OAAA,CAAS,EAC9E1B,EAAA,YAAY,UAAW,EAAK,EACrCS,EAAW,MAAQ,EAAA,CAEvB,EAEMS,EAAY,IAAM,CACtBb,EAAmB,MAAM,YAAc,GACvCA,EAAmB,MAAM,YAAc,GACxBoB,EAAA,CACjB,EAiBMA,EAAiB,SAAY,CACxBzB,EAAA,YAAY,UAAW,EAAI,EACpCU,EAAO,MAAQ,GAEf,IAAIS,EAAU,CACZ,mBAAoB,KAAK,MAAM,KAAK,UAAUd,EAAmB,KAAK,CAAC,CACzE,EAGM,MAAAS,EAAW,MAAMC,EADV,CAAE,SAAU,iBAAkB,KAAM,OAAQ,OAAQ,CAAA,EAAI,KAAMI,CAAQ,CAC/C,EAE3BnB,EAAA,YAAY,UAAW,EAAK,EACrCU,EAAO,MAAQ,GAGVI,IAEES,EAAA,CAAE,SAAO,OAAG,GAAA,KAAA,IAAA,oBAAqB,WAAW,EAAG,KAAM,UAAW,EAE9DvB,EAAA,YAAY,qBAAsBK,EAAmB,KAAK,EACrE,EAgBMsB,EAAmB,SAAY,CASnC,GAPqB,MAAMvB,EAAQ,MAAM,KAAK,CAC5C,SAAO,OAAG,GAAA,KAAA,IAAA,gBAAiB,WAAW,EACtC,WAAS,OAAG,GAAA,KAAA,IAAA,6FAA8F,WAAW,EACrH,YAAU,OAAG,GAAA,KAAA,IAAA,oBAAqB,WAAW,CAAA,CAC9C,EAMD,CAAAI,EAAS,MAAQ,GAEb,GAAA,CAEF,MAAMoB,EAAkBC,EAAS,MAAM,IAAKC,GAAY,CACtD,MAAMC,EAAO,CACX,SAAU,oBAAoBD,EAAQ,EAAE,GACxC,KAAM,SACN,OAAQ,CAAE,MAAO,EAAK,CACxB,EACA,OAAOf,EAASgB,CAAI,CAAA,CACrB,EAGKC,EAAiBC,EAAQ,MAAM,IAAKC,GAAW,CACnD,MAAMH,EAAO,CACX,SAAU,mBAAmBG,EAAO,EAAE,GACtC,KAAM,SACN,OAAQ,CAAE,MAAO,EAAK,CACxB,EACA,OAAOnB,EAASgB,CAAI,CAAA,CACrB,EAGK,CAACI,EAAgBC,CAAa,EAAI,MAAM,QAAQ,IAAI,CAAC,QAAQ,IAAIR,CAAe,EAAG,QAAQ,IAAII,CAAc,CAAC,CAAC,EAG9GT,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,oBAAqB,WAAW,EAC1C,WAAS,mBAAG,wBAAwBY,EAAe,MAAM,iBAAiBC,EAAc,MAAM,YAAa,WAAW,EACtH,KAAM,SAAA,CACP,EAIDP,EAAS,MAAQ,CAAC,EAClBI,EAAQ,MAAQ,CAAC,OACH,CAEPV,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,iBAAkB,WAAW,EACvC,WAAS,OAAG,GAAA,KAAA,IAAA,+DAAgE,WAAW,EACvF,KAAM,OAAA,CACP,CAAA,QACD,CAEAf,EAAS,MAAQ,EAAA,EAErB,EAWM6B,EAA2BC,GAAQ,CACvC,GAAI,CAACA,GAAOA,EAAI,KAAK,IAAM,GAAW,MAAA,GAGtC,IAAIC,EAAYD,EAAI,KAAO,EAAA,QAAQ,iBAAkB,GAAG,EAGxD,MAAK,aAAa,KAAKC,CAAS,IAC9BA,EAAY,IAAMA,GAGbA,CACT,EAKMC,EAAoB,IAAM,CAE1B,GAAA,CAAC7B,EAAa,MAAM,KAAA,GAAU,CAACC,EAAe,MAAM,OAAQ,CACvDW,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,gBAAiB,WAAW,EACtC,WAAS,OAAG,GAAA,KAAA,IAAA,sCAAuC,WAAW,EAC9D,KAAM,OAAA,CACP,EACD,MAAA,CAII,MAAAkB,EAAeJ,EAAwB1B,EAAa,KAAK,EAE/D,GAAI,CAAC8B,EAAc,CACVlB,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,gBAAiB,WAAW,EACtC,WAAS,OAAG,GAAA,KAAA,IAAA,uCAAwC,WAAW,EAC/D,KAAM,OAAA,CACP,EACD,MAAA,CAMF,GAFelB,EAAmB,MAAM,qBAAqB,KAAMqC,GAAaA,EAAS,MAAQD,EAAa,KAAA,CAAM,EAExG,CACHlB,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,gBAAiB,WAAW,EACtC,WAAS,OAAG,GAAA,KAAA,IAAA,mCAAoC,WAAW,EAC3D,KAAM,OAAA,CACP,EACD,MAAA,CAIiBlB,EAAA,MAAM,qBAAqB,KAAK,CACjD,IAAKoC,EAAa,KAAK,EACvB,MAAO7B,EAAe,MAAM,KAAK,CAAA,CAClC,EAGDD,EAAa,MAAQ,GACrBC,EAAe,MAAQ,EACzB,EAKM+B,GAAwBC,GAAU,CACtCvC,EAAmB,MAAM,qBAAqB,OAAOuC,EAAO,CAAC,CAC/D,EAEY,OAAA/B,EAAA"}