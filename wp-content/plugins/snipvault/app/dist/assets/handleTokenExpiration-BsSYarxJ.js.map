{"version":3,"file":"handleTokenExpiration-BsSYarxJ.js","sources":["../../src/assets/js/functions/handleTokenExpiration.js"],"sourcesContent":["/**\n * Handles expiration timing based on a PHP time() + seconds value\n * @param {number} expirationTime - PHP time() + seconds value from the server\n * @param {Function} callback - Function to execute when expiration is reached\n * @param {Function} [onTimeRemaining] - Optional callback that fires periodically with time remaining\n * @returns {Object} - Controller object with cancel method\n */\nexport const handleTokenExpiration = (expirationTime, callback, onTimeRemaining) => {\n  // PHP's time() returns seconds, JavaScript Date uses milliseconds\n  const expirationDate = new Date(expirationTime * 1000);\n\n  // Calculate time until expiration in milliseconds\n  const now = new Date();\n  let timeRemaining = expirationDate - now;\n\n  // If already expired, run callback immediately\n  if (timeRemaining <= 0) {\n    callback();\n    return { cancel: () => {} };\n  }\n\n  // Set up the main timeout for expiration\n  const timeoutId = setTimeout(() => {\n    callback();\n\n    // Clear interval if it exists\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }, timeRemaining);\n\n  // Optional interval to report remaining time\n  let intervalId = null;\n  if (typeof onTimeRemaining === \"function\") {\n    // Update every second\n    intervalId = setInterval(() => {\n      timeRemaining -= 1000;\n\n      // Convert to seconds for consistency with PHP\n      const secondsRemaining = Math.floor(timeRemaining / 1000);\n      onTimeRemaining(secondsRemaining);\n\n      // Clear interval when time is up\n      if (timeRemaining <= 0) {\n        clearInterval(intervalId);\n      }\n    }, 1000);\n  }\n\n  // Return controller with cancel method\n  return {\n    cancel: () => {\n      clearTimeout(timeoutId);\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    },\n  };\n};\n"],"names":["handleTokenExpiration","expirationTime","callback","onTimeRemaining","timeRemaining","timeoutId","intervalId","secondsRemaining"],"mappings":"AAOY,MAACA,EAAwB,CAACC,EAAgBC,EAAUC,IAAoB,CAMlF,IAAIC,EAJmB,IAAI,KAAKH,EAAiB,GAAI,EAGzC,IAAI,KAIhB,GAAIG,GAAiB,EACnB,OAAAF,EAAU,EACH,CAAE,OAAQ,IAAM,EAAI,EAI7B,MAAMG,EAAY,WAAW,IAAM,CACjCH,EAAU,EAGNI,GACF,cAAcA,CAAU,CAE3B,EAAEF,CAAa,EAGhB,IAAIE,EAAa,KACjB,OAAI,OAAOH,GAAoB,aAE7BG,EAAa,YAAY,IAAM,CAC7BF,GAAiB,IAGjB,MAAMG,EAAmB,KAAK,MAAMH,EAAgB,GAAI,EACxDD,EAAgBI,CAAgB,EAG5BH,GAAiB,GACnB,cAAcE,CAAU,CAE3B,EAAE,GAAI,GAIF,CACL,OAAQ,IAAM,CACZ,aAAaD,CAAS,EAClBC,GACF,cAAcA,CAAU,CAE3B,CACF,CACH"}