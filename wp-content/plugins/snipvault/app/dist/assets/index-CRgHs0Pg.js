import{m as x,G as v,b as y,f as b,g as l,o as a,A as g,s as c,Z as h,j as i,I as k,p as z,i as r,_ as u}from"../app.build.DVcfFWU_.js";import{n as V}from"./notify-CXlPex_L.js";const w={class:"relative flex"},M={key:0,class:"absolute top-0 left-0 h-full flex flex-col place-content-center px-2 py-1"},_={key:1,class:"absolute top-0 right-0 h-full flex flex-col place-content-center p-1"},I={__name:"index",props:x(["icon","copy","value","style"],{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(e){const d=v(),o=e,s=y(e,"modelValue");o.value&&(s.value=o.value);const p=b(()=>{let t="";return o.icon&&(t+="pl-8"),o.copy&&(t+=" pr-8"),t}),f=async()=>{try{await navigator.clipboard.writeText(s.value),V({title:"Text copied to clipboard",type:"success"})}catch(t){console.error("Failed to copy text: ",t)}};return(t,n)=>(a(),l("div",w,[g(i("input",k({"onUpdate:modelValue":n[0]||(n[0]=m=>s.value=m),class:["px-2 py-2 border border-zinc-200 dark:border-zinc-700 rounded-lg w-full transition-all outline outline-transparent outline-offset-[-2px] focus:outline-indigo-300 dark:focus:outline-indigo-700 focus:shadow-xs text-sm bg-transparent",p.value]},z(d),{style:e.style}),null,16),[[h,s.value]]),e.icon?(a(),l("div",M,[r(u,{icon:e.icon,class:"text-lg text-zinc-400"},null,8,["icon"])])):c("",!0),e.copy?(a(),l("div",_,[i("div",{class:"p-1 rounded hover:bg-zinc-100 dark:hover:bg-zinc-800 text-zinc-400 hover:text-zinc-900 cursor-pointer",onClick:f},[r(u,{icon:"duplicate",class:"text-base"})])])):c("",!0)]))}};export{I as _};
//# sourceMappingURL=index-CRgHs0Pg.js.map
