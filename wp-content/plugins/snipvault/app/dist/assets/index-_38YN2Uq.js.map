{"version":3,"file":"index-_38YN2Uq.js","sources":["../../src/components/app/file-browser/src/directory.vue","../../src/components/app/file-browser/index.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted, computed, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n\n// Components\nimport AppIcon from \"@/components/utility/icons/index.vue\";\nimport AppButton from \"@/components/utility/app-button/index.vue\";\nimport AppCheckBox from \"@/components/utility/checkbox-basic/index.vue\";\nimport AppInput from \"@/components/utility/text-input/index.vue\";\nimport AppTextarea from \"@/components/utility/text-area/index.vue\";\nimport Confirm from \"@/components/utility/confirm/index.vue\";\nimport Modal from \"@/components/utility/modal/index.vue\";\n\n// Store\nimport { useAppStore } from \"@/store/app/app.js\";\nconst appStore = useAppStore();\nconst route = useRoute();\n\n// Functions\nimport { lmnFetch } from \"@/assets/js/functions/lmnFetch.js\";\nimport { notify } from \"@/assets/js/functions/notify.js\";\nimport { inSearch } from \"@/assets/js/functions/inSearch.js\";\nimport { loadDirectory } from \"./loadDirectory.js\";\n\n// Directory state\nimport { loading, pathSegments, currentPath, search, items } from \"./constants.js\";\nconst router = useRouter();\nconst confirm = ref(null);\n\n// Modal states\nconst showNewFileModal = ref(false);\nconst showNewDirModal = ref(false);\nconst showFileEditor = ref(false);\nconst showDeleteModal = ref(false);\n\n// Current items\nconst currentFile = ref(null);\nconst fileContent = ref(\"\");\nconst newFileName = ref(\"\");\nconst newFileContent = ref(\"\");\nconst newDirName = ref(\"\");\nconst itemToDelete = ref(null);\n\n// Selected items\nconst selected = ref([]);\n\n// Computed properties\nconst pathParts = computed(() => {\n  return currentPath.value ? currentPath.value.split(\"/\") : [];\n});\n\nconst filteredItems = computed(() => {\n  if (!search.value) return items.value;\n\n  return items.value.filter((item) => item.name.toLowerCase().includes(search.value.toLowerCase()));\n});\n\n// Navigate to a directory\nconst navigateTo = (path) => {\n  loadDirectory(path);\n};\n\n// Read file content\nconst openFile = async (file) => {\n  loading.value = true;\n  appStore.updateState(\"loading\", true);\n\n  try {\n    const args = {\n      endpoint: `snipvault/v1/filesystem/read/`,\n      type: \"GET\",\n      params: { path: file.path },\n    };\n\n    const response = await lmnFetch(args);\n\n    if (response && response.data && response.data.success) {\n      currentFile.value = file;\n      fileContent.value = response.data.content;\n      showFileEditor.value = true;\n    } else {\n      notify({\n        title: __(\"Error\", \"snipvault\"),\n        content: __(\"Failed to read file\", \"snipvault\"),\n        type: \"error\",\n      });\n    }\n  } catch (error) {\n    console.error(\"Error reading file:\", error);\n    notify({\n      title: __(\"Error\", \"snipvault\"),\n      content: __(\"Failed to read file\", \"snipvault\"),\n      type: \"error\",\n    });\n  } finally {\n    loading.value = false;\n    appStore.updateState(\"loading\", false);\n  }\n};\n\n// Save file content\nconst saveFile = async () => {\n  if (!currentFile.value) return;\n\n  loading.value = true;\n  appStore.updateState(\"loading\", true);\n\n  try {\n    const args = {\n      endpoint: `snipvault/v1/filesystem/write/`,\n      type: \"POST\",\n      params: { path: currentFile.value.path },\n      data: {\n        content: fileContent.value,\n      },\n    };\n\n    const response = await lmnFetch(args);\n\n    if (response && response.data && response.data.success) {\n      notify({\n        title: __(\"Success\", \"snipvault\"),\n        content: __(\"File saved successfully\", \"snipvault\"),\n        type: \"success\",\n      });\n      closeEditor();\n      loadDirectory(currentPath.value);\n    } else {\n      notify({\n        title: __(\"Error\", \"snipvault\"),\n        content: __(\"Failed to save file\", \"snipvault\"),\n        type: \"error\",\n      });\n    }\n  } catch (error) {\n    console.error(\"Error saving file:\", error);\n    notify({\n      title: __(\"Error\", \"snipvault\"),\n      content: __(\"Failed to save file\", \"snipvault\"),\n      type: \"error\",\n    });\n  } finally {\n    loading.value = false;\n    appStore.updateState(\"loading\", false);\n  }\n};\n\n// Close file editor\nconst closeEditor = () => {\n  showFileEditor.value = false;\n  currentFile.value = null;\n  fileContent.value = \"\";\n};\n\n// Create new file\nconst createNewFile = async () => {\n  if (!newFileName.value || !newFileName.value.includes(\".\")) {\n    notify({\n      title: __(\"Error\", \"snipvault\"),\n      message: __(\"File name is required\", \"snipvault\"),\n      type: \"error\",\n    });\n    return;\n  }\n\n  const path = currentPath.value ? `${currentPath.value}/${newFileName.value}` : newFileName.value;\n\n  const exists = await lmnFetch({ endpoint: \"snipvault/v1/filesystem/exists\", params: { path } });\n\n  // Something went wrong\n  if (!exists) return;\n\n  // File exists so bail\n  if (exists.data.exists) {\n    notify({\n      title: __(\"Failed to create new file\", \"snipvault\"),\n      message: __(\"File already exists.\", \"snipvault\"),\n      type: \"error\",\n    });\n    return;\n  }\n\n  appStore.updateState(\"loading\", true);\n\n  const args = {\n    endpoint: `snipvault/v1/filesystem/write/`,\n    type: \"POST\",\n    params: { path, filename: newFileName.value },\n    data: {\n      content: \"\",\n    },\n  };\n\n  const response = await lmnFetch(args);\n\n  appStore.updateState(\"loading\", false);\n\n  if (!response) return;\n\n  router.push(`/file-browser/${path}`);\n\n  showNewFileModal.value.close();\n  newFileName.value = \"\";\n  newFileContent.value = \"\";\n  loadDirectory(currentPath.value, true);\n\n  notify({\n    title: __(\"Success\", \"snipvault\"),\n    message: __(\"File created successfully\", \"snipvault\"),\n    type: \"success\",\n  });\n};\n\n// Create new file\nconst createNewDirectory = async () => {\n  if (!newDirName.value) {\n    notify({\n      title: __(\"Error\", \"snipvault\"),\n      message: __(\"Directory name is required\", \"snipvault\"),\n      type: \"error\",\n    });\n    return;\n  }\n\n  const path = currentPath.value ? `${currentPath.value}/${newDirName.value}` : newDirName.value;\n\n  const exists = await lmnFetch({ endpoint: \"snipvault/v1/filesystem/exists\", params: { path } });\n\n  // Something went wrong\n  if (!exists) return;\n\n  // File exists so bail\n  if (exists.data.exists) {\n    notify({\n      title: __(\"Failed to create new directory\", \"snipvault\"),\n      message: __(\"Directory already exists.\", \"snipvault\"),\n      type: \"error\",\n    });\n    return;\n  }\n\n  appStore.updateState(\"loading\", true);\n\n  const args = {\n    endpoint: `snipvault/v1/filesystem/create-directory/`,\n    type: \"POST\",\n    params: { path },\n  };\n\n  const response = await lmnFetch(args);\n\n  appStore.updateState(\"loading\", false);\n\n  if (!response) return;\n\n  router.push(`/file-browser/${path}`);\n\n  showNewDirModal.value.close();\n  newDirName.value = \"\";\n  navigateTo(path);\n\n  notify({\n    title: __(\"Success\", \"snipvault\"),\n    message: __(\"Directory created successfully\", \"snipvault\"),\n    type: \"success\",\n  });\n};\n\n// Create new file\nconst duplicateFile = async (file) => {\n  const getFileArgs = {\n    endpoint: `snipvault/v1/filesystem/read/`,\n    type: \"GET\",\n    params: { path: file.path },\n  };\n  const fileResponse = await lmnFetch(getFileArgs);\n\n  if (!fileResponse) return;\n\n  appStore.updateState(\"loading\", false);\n\n  const path = addTimestampToFilename(file.path);\n  const filename = addTimestampToFilename(file.name);\n\n  appStore.updateState(\"loading\", true);\n\n  const args = {\n    endpoint: `snipvault/v1/filesystem/write/`,\n    type: \"POST\",\n    params: { path, filename },\n    data: {\n      content: fileResponse.data.content,\n    },\n  };\n\n  const response = await lmnFetch(args);\n\n  appStore.updateState(\"loading\", false);\n\n  if (!response) return;\n\n  router.push(`/file-browser/${path}`);\n\n  showNewFileModal.value.close();\n  newFileName.value = \"\";\n  newFileContent.value = \"\";\n  loadDirectory(currentPath.value, true);\n\n  notify({\n    title: __(\"File duplicated\", \"snipvault\"),\n    type: \"success\",\n  });\n};\n\n/**\n * Adds a timestamp to a filename right before the extension\n *\n * @param {string} filename - The original filename (e.g., \"index.php\")\n * @param {boolean} [useIso=false] - Use ISO format instead of Unix timestamp\n * @return {string} The filename with timestamp (e.g., \"index.1709914245.php\")\n */\nfunction addTimestampToFilename(filename, useIso = false) {\n  // Handle empty or invalid input\n  if (!filename || typeof filename !== \"string\") {\n    return filename;\n  }\n\n  // Get the current timestamp\n  const now = new Date();\n  const timestamp = useIso\n    ? now.toISOString().replace(/:/g, \"-\").replace(/\\..+/, \"\") // 2025-03-08T14-30-25\n    : Math.floor(now.getTime() / 1000); // Unix timestamp: 1709914245\n\n  // Split the filename into name and extension parts\n  const lastDotIndex = filename.lastIndexOf(\".\");\n\n  // If there's no extension, just append the timestamp\n  if (lastDotIndex === -1) {\n    return `${filename}.${timestamp}`;\n  }\n\n  // Otherwise, insert the timestamp before the extension\n  const baseName = filename.substring(0, lastDotIndex);\n  const extension = filename.substring(lastDotIndex); // includes the dot\n\n  return `${baseName}-${timestamp}${extension}`;\n}\n\n// Delete file or directory\nconst deleteItem = async (item) => {\n  // Confirm user intent\n  const userResponse = await confirm.value.show({\n    title: __(\"Are you sure?\", \"snipvault\"),\n    message: __(\"Are you sure you want to delete this file? \", \"snipvault\"),\n    okButton: __(\"Delete\", \"snipvault\"),\n  });\n\n  // Bailed by user\n  if (!userResponse) return;\n\n  appStore.updateState(\"loading\", true);\n\n  const args = {\n    endpoint: `snipvault/v1/filesystem/delete/`,\n    type: \"DELETE\",\n    params: { path: item.path },\n  };\n\n  const response = await lmnFetch(args);\n\n  appStore.updateState(\"loading\", false);\n\n  if (!response) return;\n\n  notify({\n    title: __(\"Item deleted\", \"snipvault\"),\n    message: __(\"Item deleted successfully\", \"snipvault\"),\n    type: \"success\",\n  });\n  showDeleteModal.value = false;\n  itemToDelete.value = null;\n  loadDirectory(currentPath.value, true);\n\n  if (item.path == route.params.filepath) {\n    await router.push(\"/file-browser\");\n  }\n};\n\n// Selected items methods\nconst toggleSelected = (id) => {\n  const index = selected.value.indexOf(id);\n  if (index === -1) {\n    selected.value.push(id);\n  } else {\n    selected.value.splice(index, 1);\n  }\n};\n\nconst isSelected = (id) => {\n  return selected.value.includes(id);\n};\n\n// Format size\nconst formatSize = (bytes) => {\n  if (bytes === 0) return \"0 Bytes\";\n\n  const k = 1024;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n};\n\n// Format date\nconst formatDate = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString() + \" \" + date.toLocaleTimeString();\n};\n\nconst returnFileIcon = (file) => {\n  const parts = file.name.split(\".\");\n  const extension = parts[parts.length - 1];\n\n  return !file.name.startsWith(extension) ? parts[parts.length - 1].toLowerCase() : \"file\";\n};\n\nconst returnFileColor = (file) => {\n  const language = returnFileIcon(file);\n\n  if (language == \"php\") return \"text-indigo-400\";\n  if (language == \"js\") return \"text-amber-400\";\n  if (language == \"css\") return \"text-sky-400\";\n  if (language == \"scss\") return \"text-pink-400\";\n  if (language == \"html\") return \"text-orange-400\";\n  if (language == \"txt\") return \"text-zinc-400\";\n  if (language == \"json\") return \"text-yellow-400\";\n\n  return \"text-slate-400\";\n};\n\n// Initial load\nonMounted(() => {\n  loadDirectory();\n});\n\nwatch(\n  () => search.value,\n  () => loadDirectory()\n);\n</script>\n\n<template>\n  <div class=\"flex flex-col h-full max-h-full overflow-hidden relative\">\n    <!-- Search bar -->\n    <div class=\"relative w-full border-b border-zinc-200 dark:border-zinc-700 flex flex-row pr-4 items-center gap-1\">\n      <AppIcon icon=\"search\" class=\"absolute left-5 top-1/2 -translate-y-1/2 text-zinc-500\" />\n      <input type=\"text\" v-model=\"search\" :placeholder=\"__('Search files...', 'snipvault')\" class=\"px-6 py-4 pl-12 w-full bg-white dark:bg-zinc-900 focus:outline-0 grow\" />\n      <AppButton type=\"transparent\" @click=\"showNewFileModal.show\"><AppIcon icon=\"post_add\" class=\"text-lg\" /></AppButton>\n      <AppButton type=\"transparent\" @click=\"showNewDirModal.show\"><AppIcon icon=\"create_new_folder\" class=\"text-lg\" /></AppButton>\n    </div>\n\n    <!-- Breadcrumb navigation -->\n    <div class=\"flex flex-row items-center px-4 py-2 pl-2 border-b border-zinc-200 dark:border-zinc-700 overflow-x-auto shrink-0\">\n      <AppButton @click=\"navigateTo('')\" type=\"transparent\" class=\"hover:bg-zinc-100 dark:hover:bg-zinc-700 px-2 py-1 rounded\">\n        <AppIcon icon=\"home\" /> <span class=\"text-xs\">{{ __(\"Root\", \"snipvault\") }}</span>\n      </AppButton>\n\n      <template v-for=\"(part, index) in pathParts\" :key=\"index\">\n        <span class=\"text-zinc-400 text-sm\">/</span>\n        <AppButton @click=\"navigateTo(pathParts.slice(0, index + 1).join('/'))\" type=\"transparent\" class=\"text-xs hover:bg-zinc-100 dark:hover:bg-zinc-700 px-2 py-1 rounded\">\n          {{ part }}\n        </AppButton>\n      </template>\n    </div>\n\n    <!-- Loading indicator -->\n    <div v-if=\"loading\" class=\"flex flex-col items-center justify-center p-8\">\n      <AppIcon icon=\"refresh\" class=\"text-3xl animate-spin text-zinc-400 mb-2\" />\n      <span class=\"text-sm text-zinc-500\">{{ __(\"Loading...\", \"snipvault\") }}</span>\n    </div>\n\n    <!-- Directory contents -->\n    <div v-else-if=\"filteredItems.length > 0\" class=\"overflow-y-auto p-2\">\n      <!-- Directories -->\n      <div v-for=\"item in filteredItems\" :key=\"item.path\" class=\"mb-1\">\n        <!-- Directory item -->\n        <div\n          v-if=\"item.type === 'directory'\"\n          class=\"flex flex-row px-2 py-2 pr-4 cursor-pointer transition-all group relative rounded-lg\"\n          :class=\"'hover:text-zinc-900 hover:dark:text-zinc-100 hover:bg-zinc-100 dark:hover:bg-zinc-800'\"\n          @click=\"navigateTo(item.path)\"\n        >\n          <div class=\"flex flex-row gap-3 items-center\">\n            <div class=\"aspect-square h-6 flex flex-col justify-center items-center\">\n              <AppIcon icon=\"folder\" class=\"text-xl text-zinc-200 dark:text-zinc-700\" />\n            </div>\n\n            <div class=\"truncate grow text-sm\">{{ item.name }}</div>\n\n            <div class=\"absolute flex flex-row items-center justify-end right-3 group-hover:bg-gradient-to-l from-zinc-100 dark:from-zinc-800 to-transparent w-3/4 pointer-events-none\">\n              <AppButton @click.stop.prevent=\"deleteItem(item)\" type=\"transparent\" class=\"opacity-0 group-hover:opacity-100 transition-opacity text-lg pointer-events-auto\">\n                <AppIcon icon=\"delete\"></AppIcon>\n              </AppButton>\n            </div>\n          </div>\n        </div>\n\n        <!-- File item -->\n        <RouterLink\n          :to=\"`/file-browser/${item.path}`\"\n          v-else\n          class=\"flex flex-row px-2 py-2 pr-4 cursor-pointer transition-all group relative rounded-lg\"\n          :class=\"\n            item.path == route.params.filepath || isSelected(item.path)\n              ? 'text-zinc-900 dark:text-zinc-100 bg-zinc-100 dark:bg-zinc-800'\n              : 'hover:text-zinc-900 hover:dark:text-zinc-100 hover:bg-zinc-100 dark:hover:bg-zinc-800'\n          \"\n        >\n          <div class=\"flex flex-row items-center w-full\">\n            <div class=\"flex flex-col grow gap-1 max-w-full overflow-hidden\">\n              <div class=\"flex flex-row gap-3 items-center\">\n                <div class=\"aspect-square h-6 rounded-md flex flex-col justify-center items-center bg-zinc-100 dark:bg-zinc-800\" :class=\"returnFileColor(item)\">\n                  <AppIcon :icon=\"returnFileIcon(item)\" class=\"text-xl\" />\n                </div>\n\n                <div class=\"truncate grow text-sm\">{{ item.name }}</div>\n\n                <div class=\"text-xs text-zinc-500 whitespace-nowrap\">{{ formatSize(item.size) }}</div>\n              </div>\n            </div>\n\n            <div class=\"absolute flex flex-row items-center justify-end right-3 group-hover:bg-gradient-to-l from-zinc-100 dark:from-zinc-800 to-transparent w-3/4\">\n              <AppButton @click.stop.prevent=\"duplicateFile(item)\" type=\"transparent\" class=\"opacity-0 group-hover:opacity-100 transition-opacity text-lg\">\n                <AppIcon icon=\"duplicate\"></AppIcon>\n              </AppButton>\n\n              <AppButton @click.stop.prevent=\"deleteItem(item)\" type=\"transparent\" class=\"opacity-0 group-hover:opacity-100 transition-opacity text-lg\">\n                <AppIcon icon=\"delete\"></AppIcon>\n              </AppButton>\n\n              <div class=\"shrink-0 group-hover:opacity-100 transition-opacity flex flex-col justify-center ml-2\" :class=\"isSelected(item.path) ? '' : 'opacity-0'\">\n                <AppCheckBox @click.stop.prevent=\"toggleSelected(item.path)\" :checked=\"selected.includes(item.path)\" />\n              </div>\n            </div>\n          </div>\n        </RouterLink>\n      </div>\n    </div>\n\n    <!-- Empty directory message -->\n    <div v-else class=\"flex flex-col items-center justify-center p-8 text-zinc-500\">\n      <AppIcon icon=\"folder_open\" class=\"text-4xl mb-2\" />\n      <div class=\"text-sm\">{{ __(\"This directory is empty\", \"snipvault\") }}</div>\n    </div>\n\n    <!-- New File Modal -->\n    <Modal ref=\"showNewFileModal\">\n      <div class=\"flex flex-col gap-3 p-6 w-[360px]\">\n        <div class=\"text-lg font-medium text-zinc-900 dark:text-zinc-100 mb-6\">{{ __(\"Create New File\", \"snipvault\") }}</div>\n        <div class=\"mb-4 grid grid-cols-3 ml-3\">\n          <div class=\"flex flex-col justify-center\">\n            <label class=\"block text-sm\">{{ __(\"File Name\", \"snipvault\") }}</label>\n          </div>\n          <AppInput v-model=\"newFileName\" :placeholder=\"__('filename.txt', 'snipvault')\" class=\"col-span-2\" autofocus />\n        </div>\n        <div class=\"flex justify-end gap-2\">\n          <AppButton @click=\"showNewFileModal.close()\" type=\"default\">\n            {{ __(\"Cancel\", \"snipvault\") }}\n          </AppButton>\n          <AppButton @click=\"createNewFile\" type=\"primary\">\n            {{ __(\"Create\", \"snipvault\") }}\n          </AppButton>\n        </div>\n      </div>\n    </Modal>\n\n    <!-- New Directory Modal -->\n    <Modal ref=\"showNewDirModal\">\n      <div class=\"flex flex-col gap-3 p-6 w-[360px]\">\n        <div class=\"text-lg font-medium text-zinc-900 dark:text-zinc-100 mb-6\">{{ __(\"Create New Directory\", \"snipvault\") }}</div>\n        <div class=\"mb-4 grid grid-cols-3 ml-3\">\n          <div class=\"flex flex-col justify-center\">\n            <label class=\"block text-sm\">{{ __(\"Directory Name\", \"snipvault\") }}</label>\n          </div>\n          <AppInput v-model=\"newDirName\" :placeholder=\"__('custom_dir', 'snipvault')\" class=\"col-span-2\" autofocus />\n        </div>\n        <div class=\"flex justify-end gap-2\">\n          <AppButton @click=\"showNewDirModal.close()\" type=\"default\">\n            {{ __(\"Cancel\", \"snipvault\") }}\n          </AppButton>\n          <AppButton @click=\"createNewDirectory\" type=\"primary\">\n            {{ __(\"Create\", \"snipvault\") }}\n          </AppButton>\n        </div>\n      </div>\n    </Modal>\n\n    <!-- Delete Confirmation Modal -->\n    <Confirm\n      ref=\"showDeleteModal\"\n      @confirm=\"deleteItem\"\n      @cancel=\"showDeleteModal = false\"\n      :title=\"__('Confirm Delete', 'snipvault')\"\n      :message=\"__('Are you sure you want to delete', 'snipvault') + ' ' + itemToDelete?.name + '?'\"\n      :confirm-text=\"__('Delete', 'snipvault')\"\n      :cancel-text=\"__('Cancel', 'snipvault')\"\n    >\n      <div v-if=\"itemToDelete?.type === 'directory'\" class=\"mt-2 text-red-500 text-sm\">\n        {{ __(\"Warning: This will delete all files and subdirectories inside this directory.\", \"snipvault\") }}\n      </div>\n    </Confirm>\n\n    <Confirm ref=\"confirm\" />\n  </div>\n</template>\n","<script setup>\nimport { ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n\n// Store\nimport { useAppStore } from \"@/store/app/app.js\";\nconst appStore = useAppStore();\nconst route = useRoute();\n\n// Functions\nimport { lmnFetch } from \"@/assets/js/functions/lmnFetch.js\";\nimport { notify } from \"@/assets/js/functions/notify.js\";\nimport { handleTokenExpiration } from \"@/assets/js/functions/handleTokenExpiration.js\";\n\nimport Directory from \"./src/directory.vue\";\nimport AppIcon from \"@/components/utility/icons/index.vue\";\nimport Confirm from \"@/components/utility/confirm/index.vue\";\n\n// Consts\nconst activated = ref(false);\nconst confirm = ref(null);\nconst router = useRouter();\n\n// Create new file\nconst getActivationState = async () => {\n  appStore.updateState(\"loading\", true);\n  const args = {\n    endpoint: `snipvault/v1/filesystem/status`,\n  };\n\n  const response = await lmnFetch(args);\n\n  appStore.updateState(\"loading\", false);\n\n  if (!response) return;\n\n  if (response.data.active) {\n    activated.value = true;\n    handleTokenExpiration(response.data.expires, showTokenExpiryModal, (secondsRemaining) => {});\n    return;\n  }\n\n  // Confirm user intent\n  const userResponse = await confirm.value.show({\n    title: __(\"Enable File Browser?\", \"snipvault\"),\n    message: __(\"For security reasons, file browsing and editing requires temporary activation. Once activated, it will remain available for one hour and then automatically deactivate.\", \"snipvault\"),\n    okButton: __(\"Activate for 1 Hour\", \"snipvault\"),\n  });\n\n  // Bailed by user\n  if (!userResponse) {\n    router.push(`/`);\n    return;\n  }\n\n  activateFileBrowsing();\n};\n\n// Create new file\nconst activateFileBrowsing = async () => {\n  appStore.updateState(\"loading\", true);\n  const args = {\n    endpoint: `snipvault/v1/filesystem/enable`,\n    type: \"POST\",\n  };\n\n  const response = await lmnFetch(args);\n\n  appStore.updateState(\"loading\", false);\n\n  if (!response) return;\n\n  if (response.data.success) {\n    activated.value = true;\n    notify({\n      title: __(\"File browsing enabled\", \"snipvault\"),\n      type: \"success\",\n    });\n\n    handleTokenExpiration(response.data.expires, showTokenExpiryModal, (secondsRemaining) => {});\n    return;\n  }\n};\n\nconst showTokenExpiryModal = async () => {\n  // Confirm user intent\n  const userResponse = await confirm.value.show({\n    title: __(\"File browser access has expired\", \"snipvault\"),\n    message: __(\"For security reasons, access to the file browser has now expired. Would you like to extend access for one hour?\", \"snipvault\"),\n    okButton: __(\"Activate for 1 Hour\", \"snipvault\"),\n  });\n\n  if (userResponse) {\n    activateCLI();\n  }\n};\n\ngetActivationState();\n</script>\n\n<template>\n  <div class=\"w-[300px] border-r border-zinc-200 dark:border-zinc-700 h-full max-h-full shrink-0\">\n    <Directory v-if=\"activated\" />\n  </div>\n\n  <div class=\"grow overflow-hidden\">\n    <RouterView v-slot=\"{ Component }\" v-if=\"activated\">\n      <component :is=\"Component\" v-if=\"Component\" />\n\n      <div v-else class=\"w-full h-full flex flex-col items-center justify-center p-16\">\n        <AppIcon icon=\"code\" style=\"font-size: 88px\" />\n        <div>{{ __(\"No file selected\", \"snipvault\") }}</div>\n      </div>\n    </RouterView>\n  </div>\n\n  <Confirm ref=\"confirm\" />\n</template>\n"],"names":["appStore","useAppStore","route","useRoute","router","useRouter","confirm","ref","showNewFileModal","showNewDirModal","showDeleteModal","newFileName","newFileContent","newDirName","itemToDelete","selected","pathParts","computed","currentPath","filteredItems","search","items","item","navigateTo","path","loadDirectory","createNewFile","notify","exists","lmnFetch","args","response","createNewDirectory","duplicateFile","file","getFileArgs","fileResponse","addTimestampToFilename","filename","useIso","now","timestamp","lastDotIndex","baseName","extension","deleteItem","toggleSelected","id","index","isSelected","formatSize","bytes","k","sizes","i","returnFileIcon","parts","returnFileColor","language","onMounted","watch","activated","getActivationState","handleTokenExpiration","showTokenExpiryModal","secondsRemaining","activateFileBrowsing"],"mappings":"khFAeA,MAAMA,EAAWC,GAAY,EACvBC,EAAQC,GAAS,EAUjBC,EAASC,GAAU,EACnBC,EAAUC,EAAI,IAAI,EAGlBC,EAAmBD,EAAI,EAAK,EAC5BE,EAAkBF,EAAI,EAAK,EACVA,EAAI,EAAK,EAC1B,MAAAG,EAAkBH,EAAI,EAAK,EAGbA,EAAI,IAAI,EACRA,EAAI,EAAE,EACpB,MAAAI,EAAcJ,EAAI,EAAE,EACpBK,EAAiBL,EAAI,EAAE,EACvBM,EAAaN,EAAI,EAAE,EACnBO,EAAeP,EAAI,IAAI,EAGvBQ,EAAWR,EAAI,EAAE,EAGjBS,EAAYC,EAAS,IAClBC,EAAY,MAAQA,EAAY,MAAM,MAAM,GAAG,EAAI,CAAC,CAC5D,EAEKC,EAAgBF,EAAS,IACxBG,EAAO,MAELC,EAAM,MAAM,OAAQC,GAASA,EAAK,KAAK,YAAY,EAAE,SAASF,EAAO,MAAM,YAAa,CAAA,CAAC,EAFtEC,EAAM,KAGjC,EAGKE,EAAcC,GAAS,CAC3BC,EAAcD,CAAI,CACpB,EA+FME,GAAgB,SAAY,CAC5B,GAAA,CAACf,EAAY,OAAS,CAACA,EAAY,MAAM,SAAS,GAAG,EAAG,CACnDgB,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,QAAS,WAAW,EAC9B,WAAS,OAAG,GAAA,KAAA,IAAA,wBAAyB,WAAW,EAChD,KAAM,OAAA,CACP,EACD,MAAA,CAGI,MAAAH,EAAON,EAAY,MAAQ,GAAGA,EAAY,KAAK,IAAIP,EAAY,KAAK,GAAKA,EAAY,MAErFiB,EAAS,MAAMC,EAAS,CAAE,SAAU,iCAAkC,OAAQ,CAAE,KAAAL,CAAK,EAAG,EAG9F,GAAI,CAACI,EAAQ,OAGT,GAAAA,EAAO,KAAK,OAAQ,CACfD,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,4BAA6B,WAAW,EAClD,WAAS,OAAG,GAAA,KAAA,IAAA,uBAAwB,WAAW,EAC/C,KAAM,OAAA,CACP,EACD,MAAA,CAGO3B,EAAA,YAAY,UAAW,EAAI,EAEpC,MAAM8B,EAAO,CACX,SAAU,iCACV,KAAM,OACN,OAAQ,CAAE,KAAAN,EAAM,SAAUb,EAAY,KAAM,EAC5C,KAAM,CACJ,QAAS,EAAA,CAEb,EAEMoB,EAAW,MAAMF,EAASC,CAAI,EAE3B9B,EAAA,YAAY,UAAW,EAAK,EAEhC+B,IAEE3B,EAAA,KAAK,iBAAiBoB,CAAI,EAAE,EAEnChB,EAAiB,MAAM,MAAM,EAC7BG,EAAY,MAAQ,GACpBC,EAAe,MAAQ,GACTa,EAAAP,EAAY,MAAO,EAAI,EAE9BS,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,UAAW,WAAW,EAChC,WAAS,OAAG,GAAA,KAAA,IAAA,4BAA6B,WAAW,EACpD,KAAM,SAAA,CACP,EACH,EAGMK,GAAqB,SAAY,CACjC,GAAA,CAACnB,EAAW,MAAO,CACdc,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,QAAS,WAAW,EAC9B,WAAS,OAAG,GAAA,KAAA,IAAA,6BAA8B,WAAW,EACrD,KAAM,OAAA,CACP,EACD,MAAA,CAGI,MAAAH,EAAON,EAAY,MAAQ,GAAGA,EAAY,KAAK,IAAIL,EAAW,KAAK,GAAKA,EAAW,MAEnFe,EAAS,MAAMC,EAAS,CAAE,SAAU,iCAAkC,OAAQ,CAAE,KAAAL,CAAK,EAAG,EAG9F,GAAI,CAACI,EAAQ,OAGT,GAAAA,EAAO,KAAK,OAAQ,CACfD,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,iCAAkC,WAAW,EACvD,WAAS,OAAG,GAAA,KAAA,IAAA,4BAA6B,WAAW,EACpD,KAAM,OAAA,CACP,EACD,MAAA,CAGO3B,EAAA,YAAY,UAAW,EAAI,EAQ9B,MAAA+B,EAAW,MAAMF,EANV,CACX,SAAU,4CACV,KAAM,OACN,OAAQ,CAAE,KAAAL,CAAK,CACjB,CAEoC,EAE3BxB,EAAA,YAAY,UAAW,EAAK,EAEhC+B,IAEE3B,EAAA,KAAK,iBAAiBoB,CAAI,EAAE,EAEnCf,EAAgB,MAAM,MAAM,EAC5BI,EAAW,MAAQ,GACnBU,EAAWC,CAAI,EAERG,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,UAAW,WAAW,EAChC,WAAS,OAAG,GAAA,KAAA,IAAA,iCAAkC,WAAW,EACzD,KAAM,SAAA,CACP,EACH,EAGMM,GAAgB,MAAOC,GAAS,CACpC,MAAMC,EAAc,CAClB,SAAU,gCACV,KAAM,MACN,OAAQ,CAAE,KAAMD,EAAK,IAAK,CAC5B,EACME,EAAe,MAAMP,EAASM,CAAW,EAE/C,GAAI,CAACC,EAAc,OAEVpC,EAAA,YAAY,UAAW,EAAK,EAE/B,MAAAwB,EAAOa,EAAuBH,EAAK,IAAI,EACvCI,EAAWD,EAAuBH,EAAK,IAAI,EAExClC,EAAA,YAAY,UAAW,EAAI,EAEpC,MAAM8B,EAAO,CACX,SAAU,iCACV,KAAM,OACN,OAAQ,CAAE,KAAAN,EAAM,SAAAc,CAAS,EACzB,KAAM,CACJ,QAASF,EAAa,KAAK,OAAA,CAE/B,EAEML,EAAW,MAAMF,EAASC,CAAI,EAE3B9B,EAAA,YAAY,UAAW,EAAK,EAEhC+B,IAEE3B,EAAA,KAAK,iBAAiBoB,CAAI,EAAE,EAEnChB,EAAiB,MAAM,MAAM,EAC7BG,EAAY,MAAQ,GACpBC,EAAe,MAAQ,GACTa,EAAAP,EAAY,MAAO,EAAI,EAE9BS,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,kBAAmB,WAAW,EACxC,KAAM,SAAA,CACP,EACH,EASS,SAAAU,EAAuBC,EAAUC,EAAS,GAAO,CAExD,GAAI,CAACD,GAAY,OAAOA,GAAa,SAC5B,OAAAA,EAIH,MAAAE,MAAU,KACVC,EAAYF,EACdC,EAAI,cAAc,QAAQ,KAAM,GAAG,EAAE,QAAQ,OAAQ,EAAE,EACvD,KAAK,MAAMA,EAAI,UAAY,GAAI,EAG7BE,EAAeJ,EAAS,YAAY,GAAG,EAG7C,GAAII,IAAiB,GACZ,MAAA,GAAGJ,CAAQ,IAAIG,CAAS,GAIjC,MAAME,EAAWL,EAAS,UAAU,EAAGI,CAAY,EAC7CE,EAAYN,EAAS,UAAUI,CAAY,EAEjD,MAAO,GAAGC,CAAQ,IAAIF,CAAS,GAAGG,CAAS,EAAA,CAIvC,MAAAC,EAAa,MAAOvB,GAAS,CASjC,GAAI,CAPiB,MAAMhB,EAAQ,MAAM,KAAK,CAC5C,SAAO,OAAG,GAAA,KAAA,IAAA,gBAAiB,WAAW,EACtC,WAAS,OAAG,GAAA,KAAA,IAAA,8CAA+C,WAAW,EACtE,YAAU,OAAG,GAAA,KAAA,IAAA,SAAU,WAAW,CAAA,CACnC,EAGkB,OAEVN,EAAA,YAAY,UAAW,EAAI,EAEpC,MAAM8B,EAAO,CACX,SAAU,kCACV,KAAM,SACN,OAAQ,CAAE,KAAMR,EAAK,IAAK,CAC5B,EAEMS,EAAW,MAAMF,EAASC,CAAI,EAE3B9B,EAAA,YAAY,UAAW,EAAK,EAEhC+B,IAEEJ,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,eAAgB,WAAW,EACrC,WAAS,OAAG,GAAA,KAAA,IAAA,4BAA6B,WAAW,EACpD,KAAM,SAAA,CACP,EACDjB,EAAgB,MAAQ,GACxBI,EAAa,MAAQ,KACPW,EAAAP,EAAY,MAAO,EAAI,EAEjCI,EAAK,MAAQpB,EAAM,OAAO,UACtB,MAAAE,EAAO,KAAK,eAAe,EAErC,EAGM0C,GAAkBC,GAAO,CAC7B,MAAMC,EAAQjC,EAAS,MAAM,QAAQgC,CAAE,EACnCC,IAAU,GACHjC,EAAA,MAAM,KAAKgC,CAAE,EAEbhC,EAAA,MAAM,OAAOiC,EAAO,CAAC,CAElC,EAEMC,EAAcF,GACXhC,EAAS,MAAM,SAASgC,CAAE,EAI7BG,GAAcC,GAAU,CACxB,GAAAA,IAAU,EAAU,MAAA,UAExB,MAAMC,EAAI,KACJC,EAAQ,CAAC,QAAS,KAAM,KAAM,IAAI,EAClCC,EAAI,KAAK,MAAM,KAAK,IAAIH,CAAK,EAAI,KAAK,IAAIC,CAAC,CAAC,EAElD,OAAO,YAAYD,EAAQ,KAAK,IAAIC,EAAGE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAI,IAAMD,EAAMC,CAAC,CACxE,EAQMC,EAAkBrB,GAAS,CAC/B,MAAMsB,EAAQtB,EAAK,KAAK,MAAM,GAAG,EAC3BU,EAAYY,EAAMA,EAAM,OAAS,CAAC,EAExC,OAAQtB,EAAK,KAAK,WAAWU,CAAS,EAA4C,OAAxCY,EAAMA,EAAM,OAAS,CAAC,EAAE,YAAgB,CACpF,EAEMC,GAAmBvB,GAAS,CAC1B,MAAAwB,EAAWH,EAAerB,CAAI,EAEhC,OAAAwB,GAAY,MAAc,kBAC1BA,GAAY,KAAa,iBACzBA,GAAY,MAAc,eAC1BA,GAAY,OAAe,gBAC3BA,GAAY,OAAe,kBAC3BA,GAAY,MAAc,gBAC1BA,GAAY,OAAe,kBAExB,gBACT,EAGA,OAAAC,GAAU,IAAM,CACAlC,EAAA,CAAA,CACf,EAEDmC,GACE,IAAMxC,EAAO,MACb,IAAMK,EAAc,CACtB,s8KC1bA,MAAMzB,EAAWC,GAAY,EACfE,GAAS,EAYjB,MAAA0D,EAAYtD,EAAI,EAAK,EACrBD,EAAUC,EAAI,IAAI,EAClBH,EAASC,GAAU,EAGnByD,EAAqB,SAAY,CAC5B9D,EAAA,YAAY,UAAW,EAAI,EAK9B,MAAA+B,EAAW,MAAMF,EAJV,CACX,SAAU,gCACZ,CAEoC,EAIpC,GAFS7B,EAAA,YAAY,UAAW,EAAK,EAEjC,CAAC+B,EAAU,OAEX,GAAAA,EAAS,KAAK,OAAQ,CACxB8B,EAAU,MAAQ,GAClBE,EAAsBhC,EAAS,KAAK,QAASiC,EAAuBC,GAAqB,CAAA,CAAE,EAC3F,MAAA,CAWF,GAAI,CAPiB,MAAM3D,EAAQ,MAAM,KAAK,CAC5C,SAAO,OAAG,GAAA,KAAA,IAAA,uBAAwB,WAAW,EAC7C,WAAS,OAAG,GAAA,KAAA,IAAA,0KAA2K,WAAW,EAClM,YAAU,OAAG,GAAA,KAAA,IAAA,sBAAuB,WAAW,CAAA,CAChD,EAGkB,CACjBF,EAAO,KAAK,GAAG,EACf,MAAA,CAGmB8D,EAAA,CACvB,EAGMA,EAAuB,SAAY,CAC9BlE,EAAA,YAAY,UAAW,EAAI,EAM9B,MAAA+B,EAAW,MAAMF,EALV,CACX,SAAU,iCACV,KAAM,MACR,CAEoC,EAIpC,GAFS7B,EAAA,YAAY,UAAW,EAAK,EAEjC,EAAC+B,GAEDA,EAAS,KAAK,QAAS,CACzB8B,EAAU,MAAQ,GACXlC,EAAA,CACL,SAAO,OAAG,GAAA,KAAA,IAAA,wBAAyB,WAAW,EAC9C,KAAM,SAAA,CACP,EAEDoC,EAAsBhC,EAAS,KAAK,QAASiC,EAAuBC,GAAqB,CAAA,CAAE,EAC3F,MAAA,CAEJ,EAEMD,EAAuB,SAAY,CAElB,MAAM1D,EAAQ,MAAM,KAAK,CAC5C,SAAO,OAAG,GAAA,KAAA,IAAA,kCAAmC,WAAW,EACxD,WAAS,OAAG,GAAA,KAAA,IAAA,kHAAmH,WAAW,EAC1I,YAAU,OAAG,GAAA,KAAA,IAAA,sBAAuB,WAAW,CAAA,CAChD,GAGa,YAAA,CAEhB,EAEmB,OAAAwD,EAAA"}