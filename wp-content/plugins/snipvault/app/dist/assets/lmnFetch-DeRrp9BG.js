import{n as N}from"./notify-CXlPex_L.js";import{u as T}from"../app.build.DVcfFWU_.js";let h=!0;const W=async({endpoint:n="",type:s="GET",data:a={},params:g={},signal:f=null,isFormData:m=!1,logging:j=!1,hideErrors:u=!1})=>{const p=T(),c=p.state.restNonce,y=p.state.restBase;h=u===!1;const e={method:s,headers:{}};s!=="GET"?m?(e.body=a,e.headers={"X-WP-Nonce":c}):(e.body=JSON.stringify(a),e.headers={"Content-Type":"application/json","X-WP-Nonce":c}):e.headers={"Content-Type":"application/json","X-WP-Nonce":c},f&&(e.signal=f);const d=new URL(`${y}${n}`);Object.entries(g).forEach(([t,i])=>{i!=null&&i!=""&&d.searchParams.append(t,i)});const o=await fetch(d.toString(),e);if(!o.ok)try{const t=await o.json();return l(t.code||"Unable to connect",t.message||t.error,!0)}catch{return l("Unable to connect","Unable to connect to remote services at this time")}const r=await o.json();if(r.error)return l(r.title||r.error,r.message);const P=o.headers.get("X-WP-Total"),b=o.headers.get("X-WP-TotalPages");return{data:r,totalItems:P,totalPages:b}},l=(n,s,a)=>{h&&N({type:"error",title:n,message:s})};export{W as l};
//# sourceMappingURL=lmnFetch-DeRrp9BG.js.map
